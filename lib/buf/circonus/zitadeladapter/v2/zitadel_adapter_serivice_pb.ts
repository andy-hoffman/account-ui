// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file circonus/zitadeladapter/v2/zitadel_adapter_serivice.proto (package circonus.zitadeladapter.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { Account, AccountLifecycleChange } from "../../account/v2/account_pb.js";

/**
 * @generated from message circonus.zitadeladapter.v2.Organization
 */
export class Organization extends Message<Organization> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string primary_domain = 3;
   */
  primaryDomain = "";

  /**
   * @generated from field: string account_id = 4;
   */
  accountId = "";

  /**
   * @generated from field: repeated string email_domains = 5;
   */
  emailDomains: string[] = [];

  /**
   * @generated from field: string primary_email_domain = 6;
   */
  primaryEmailDomain = "";

  /**
   * @generated from field: string admin_user_first_name = 7;
   */
  adminUserFirstName = "";

  /**
   * @generated from field: string admin_user_last_name = 8;
   */
  adminUserLastName = "";

  /**
   * @generated from field: string admin_user_email = 9;
   */
  adminUserEmail = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 11;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp deleted_at = 12;
   */
  deletedAt?: Timestamp;

  constructor(data?: PartialMessage<Organization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "circonus.zitadeladapter.v2.Organization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "primary_domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "email_domains", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "primary_email_domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "admin_user_first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "admin_user_last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "admin_user_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "created_at", kind: "message", T: Timestamp },
    { no: 11, name: "updated_at", kind: "message", T: Timestamp },
    { no: 12, name: "deleted_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Organization {
    return new Organization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Organization {
    return new Organization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Organization {
    return new Organization().fromJsonString(jsonString, options);
  }

  static equals(a: Organization | PlainMessage<Organization> | undefined, b: Organization | PlainMessage<Organization> | undefined): boolean {
    return proto3.util.equals(Organization, a, b);
  }
}

/**
 * @generated from message circonus.zitadeladapter.v2.OrganizationList
 */
export class OrganizationList extends Message<OrganizationList> {
  /**
   * @generated from field: repeated circonus.zitadeladapter.v2.Organization organizations = 1;
   */
  organizations: Organization[] = [];

  constructor(data?: PartialMessage<OrganizationList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "circonus.zitadeladapter.v2.OrganizationList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organizations", kind: "message", T: Organization, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationList {
    return new OrganizationList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationList {
    return new OrganizationList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationList {
    return new OrganizationList().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationList | PlainMessage<OrganizationList> | undefined, b: OrganizationList | PlainMessage<OrganizationList> | undefined): boolean {
    return proto3.util.equals(OrganizationList, a, b);
  }
}

/**
 * @generated from message circonus.zitadeladapter.v2.NewOrganizationRequest
 */
export class NewOrganizationRequest extends Message<NewOrganizationRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string primary_domain = 2;
   */
  primaryDomain = "";

  /**
   * @generated from field: string primary_email = 3;
   */
  primaryEmail = "";

  /**
   * @generated from field: string admin_user_first_name = 4;
   */
  adminUserFirstName = "";

  /**
   * @generated from field: string admin_user_last_name = 5;
   */
  adminUserLastName = "";

  /**
   * @generated from field: string admin_user_email = 6;
   */
  adminUserEmail = "";

  constructor(data?: PartialMessage<NewOrganizationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "circonus.zitadeladapter.v2.NewOrganizationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "primary_domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "primary_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "admin_user_first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "admin_user_last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "admin_user_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewOrganizationRequest {
    return new NewOrganizationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewOrganizationRequest {
    return new NewOrganizationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewOrganizationRequest {
    return new NewOrganizationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: NewOrganizationRequest | PlainMessage<NewOrganizationRequest> | undefined, b: NewOrganizationRequest | PlainMessage<NewOrganizationRequest> | undefined): boolean {
    return proto3.util.equals(NewOrganizationRequest, a, b);
  }
}

/**
 * @generated from message circonus.zitadeladapter.v2.NewOrganizationResponse
 */
export class NewOrganizationResponse extends Message<NewOrganizationResponse> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: string status = 2;
   */
  status = "";

  /**
   * @generated from field: string account_id = 3;
   */
  accountId = "";

  /**
   * @generated from field: circonus.zitadeladapter.v2.Organization org = 4;
   */
  org?: Organization;

  constructor(data?: PartialMessage<NewOrganizationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "circonus.zitadeladapter.v2.NewOrganizationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "org", kind: "message", T: Organization },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewOrganizationResponse {
    return new NewOrganizationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewOrganizationResponse {
    return new NewOrganizationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewOrganizationResponse {
    return new NewOrganizationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: NewOrganizationResponse | PlainMessage<NewOrganizationResponse> | undefined, b: NewOrganizationResponse | PlainMessage<NewOrganizationResponse> | undefined): boolean {
    return proto3.util.equals(NewOrganizationResponse, a, b);
  }
}

/**
 * @generated from message circonus.zitadeladapter.v2.ReconcileAccountLifecycleChangeResponse
 */
export class ReconcileAccountLifecycleChangeResponse extends Message<ReconcileAccountLifecycleChangeResponse> {
  /**
   * @generated from field: string account_id = 1;
   */
  accountId = "";

  /**
   * @generated from field: string change_id = 2;
   */
  changeId = "";

  /**
   * @generated from field: string org_id = 3;
   */
  orgId = "";

  /**
   * @generated from field: circonus.zitadeladapter.v2.Organization org = 4;
   */
  org?: Organization;

  /**
   * @generated from field: circonus.account.v2.AccountLifecycleChange correlated_change = 5;
   */
  correlatedChange?: AccountLifecycleChange;

  /**
   * @generated from field: circonus.account.v2.Account account = 6;
   */
  account?: Account;

  constructor(data?: PartialMessage<ReconcileAccountLifecycleChangeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "circonus.zitadeladapter.v2.ReconcileAccountLifecycleChangeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "change_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "org", kind: "message", T: Organization },
    { no: 5, name: "correlated_change", kind: "message", T: AccountLifecycleChange },
    { no: 6, name: "account", kind: "message", T: Account },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReconcileAccountLifecycleChangeResponse {
    return new ReconcileAccountLifecycleChangeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReconcileAccountLifecycleChangeResponse {
    return new ReconcileAccountLifecycleChangeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReconcileAccountLifecycleChangeResponse {
    return new ReconcileAccountLifecycleChangeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ReconcileAccountLifecycleChangeResponse | PlainMessage<ReconcileAccountLifecycleChangeResponse> | undefined, b: ReconcileAccountLifecycleChangeResponse | PlainMessage<ReconcileAccountLifecycleChangeResponse> | undefined): boolean {
    return proto3.util.equals(ReconcileAccountLifecycleChangeResponse, a, b);
  }
}

