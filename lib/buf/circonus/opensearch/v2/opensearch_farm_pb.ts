// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file circonus/opensearch/v2/opensearch_farm.proto (package circonus.opensearch.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message circonus.opensearch.v2.OpenSearchFarm
 */
export class OpenSearchFarm extends Message<OpenSearchFarm> {
  /**
   * @generated from field: string opensearch_cluster_id = 1;
   */
  opensearchClusterId = "";

  constructor(data?: PartialMessage<OpenSearchFarm>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "circonus.opensearch.v2.OpenSearchFarm";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "opensearch_cluster_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OpenSearchFarm {
    return new OpenSearchFarm().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OpenSearchFarm {
    return new OpenSearchFarm().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OpenSearchFarm {
    return new OpenSearchFarm().fromJsonString(jsonString, options);
  }

  static equals(a: OpenSearchFarm | PlainMessage<OpenSearchFarm> | undefined, b: OpenSearchFarm | PlainMessage<OpenSearchFarm> | undefined): boolean {
    return proto3.util.equals(OpenSearchFarm, a, b);
  }
}

