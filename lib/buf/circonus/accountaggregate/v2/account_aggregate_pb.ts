// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file circonus/accountaggregate/v2/account_aggregate.proto (package circonus.accountaggregate.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Int64Value, Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { Account } from "../../account/v2/account_pb.js";
import { DependentSystem } from "./dependent_system_pb.js";

/**
 * @generated from message circonus.accountaggregate.v2.AccountAggregate
 */
export class AccountAggregate extends Message<AccountAggregate> {
  /**
   * @generated from field: string revision_id = 1;
   */
  revisionId = "";

  /**
   * @generated from field: string account_id = 2;
   */
  accountId = "";

  /**
   * @generated from field: circonus.account.v2.Account account = 3;
   */
  account?: Account;

  /**
   * @generated from field: map<string, circonus.accountaggregate.v2.DependentSystem> dependencies = 4;
   */
  dependencies: { [key: string]: DependentSystem } = {};

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp refreshed_at = 6;
   */
  refreshedAt?: Timestamp;

  constructor(data?: PartialMessage<AccountAggregate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "circonus.accountaggregate.v2.AccountAggregate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "account", kind: "message", T: Account },
    { no: 4, name: "dependencies", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: DependentSystem} },
    { no: 5, name: "created_at", kind: "message", T: Timestamp },
    { no: 6, name: "refreshed_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccountAggregate {
    return new AccountAggregate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccountAggregate {
    return new AccountAggregate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccountAggregate {
    return new AccountAggregate().fromJsonString(jsonString, options);
  }

  static equals(a: AccountAggregate | PlainMessage<AccountAggregate> | undefined, b: AccountAggregate | PlainMessage<AccountAggregate> | undefined): boolean {
    return proto3.util.equals(AccountAggregate, a, b);
  }
}

/**
 * @generated from message circonus.accountaggregate.v2.AccountDependentSystemChange
 */
export class AccountDependentSystemChange extends Message<AccountDependentSystemChange> {
  /**
   * @generated from field: string change_id = 1;
   */
  changeId = "";

  /**
   * @generated from field: string account_id = 2;
   */
  accountId = "";

  /**
   * @generated from field: circonus.accountaggregate.v2.AccountAggregate before = 3;
   */
  before?: AccountAggregate;

  /**
   * @generated from field: circonus.accountaggregate.v2.AccountAggregate after = 4;
   */
  after?: AccountAggregate;

  /**
   * @generated from field: google.protobuf.Int64Value before_revision_id = 5;
   */
  beforeRevisionId?: bigint;

  /**
   * @generated from field: google.protobuf.Int64Value after_revision_id = 6;
   */
  afterRevisionId?: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp before_changed_at = 7;
   */
  beforeChangedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp after_changed_at = 8;
   */
  afterChangedAt?: Timestamp;

  constructor(data?: PartialMessage<AccountDependentSystemChange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "circonus.accountaggregate.v2.AccountDependentSystemChange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "change_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "before", kind: "message", T: AccountAggregate },
    { no: 4, name: "after", kind: "message", T: AccountAggregate },
    { no: 5, name: "before_revision_id", kind: "message", T: Int64Value },
    { no: 6, name: "after_revision_id", kind: "message", T: Int64Value },
    { no: 7, name: "before_changed_at", kind: "message", T: Timestamp },
    { no: 8, name: "after_changed_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccountDependentSystemChange {
    return new AccountDependentSystemChange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccountDependentSystemChange {
    return new AccountDependentSystemChange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccountDependentSystemChange {
    return new AccountDependentSystemChange().fromJsonString(jsonString, options);
  }

  static equals(a: AccountDependentSystemChange | PlainMessage<AccountDependentSystemChange> | undefined, b: AccountDependentSystemChange | PlainMessage<AccountDependentSystemChange> | undefined): boolean {
    return proto3.util.equals(AccountDependentSystemChange, a, b);
  }
}

