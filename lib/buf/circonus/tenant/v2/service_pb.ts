// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file circonus/tenant/v2/service.proto (package circonus.tenant.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { AccountLifecycleChange } from "../../account/v2/account_pb.js";

/**
 * @generated from message circonus.tenant.v2.ReconcileAccountLifecycleChangeRequest
 */
export class ReconcileAccountLifecycleChangeRequest extends Message<ReconcileAccountLifecycleChangeRequest> {
  /**
   * @generated from field: circonus.account.v2.AccountLifecycleChange account_lifecycle_change = 1;
   */
  accountLifecycleChange?: AccountLifecycleChange;

  constructor(data?: PartialMessage<ReconcileAccountLifecycleChangeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "circonus.tenant.v2.ReconcileAccountLifecycleChangeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_lifecycle_change", kind: "message", T: AccountLifecycleChange },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReconcileAccountLifecycleChangeRequest {
    return new ReconcileAccountLifecycleChangeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReconcileAccountLifecycleChangeRequest {
    return new ReconcileAccountLifecycleChangeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReconcileAccountLifecycleChangeRequest {
    return new ReconcileAccountLifecycleChangeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ReconcileAccountLifecycleChangeRequest | PlainMessage<ReconcileAccountLifecycleChangeRequest> | undefined, b: ReconcileAccountLifecycleChangeRequest | PlainMessage<ReconcileAccountLifecycleChangeRequest> | undefined): boolean {
    return proto3.util.equals(ReconcileAccountLifecycleChangeRequest, a, b);
  }
}

/**
 * @generated from message circonus.tenant.v2.ReconcileAccountLifecycleChangeResponse
 */
export class ReconcileAccountLifecycleChangeResponse extends Message<ReconcileAccountLifecycleChangeResponse> {
  /**
   * @generated from field: string sequence_id = 1;
   */
  sequenceId = "";

  /**
   * @generated from field: string account_id = 2;
   */
  accountId = "";

  /**
   * @generated from field: string account_aggregate_id = 3;
   */
  accountAggregateId = "";

  constructor(data?: PartialMessage<ReconcileAccountLifecycleChangeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "circonus.tenant.v2.ReconcileAccountLifecycleChangeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sequence_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "account_aggregate_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReconcileAccountLifecycleChangeResponse {
    return new ReconcileAccountLifecycleChangeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReconcileAccountLifecycleChangeResponse {
    return new ReconcileAccountLifecycleChangeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReconcileAccountLifecycleChangeResponse {
    return new ReconcileAccountLifecycleChangeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ReconcileAccountLifecycleChangeResponse | PlainMessage<ReconcileAccountLifecycleChangeResponse> | undefined, b: ReconcileAccountLifecycleChangeResponse | PlainMessage<ReconcileAccountLifecycleChangeResponse> | undefined): boolean {
    return proto3.util.equals(ReconcileAccountLifecycleChangeResponse, a, b);
  }
}

