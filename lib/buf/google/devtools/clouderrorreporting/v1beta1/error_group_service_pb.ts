// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file google/devtools/clouderrorreporting/v1beta1/error_group_service.proto (package google.devtools.clouderrorreporting.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { ErrorGroup } from "./common_pb.js";

/**
 * A request to return an individual group.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.GetGroupRequest
 */
export class GetGroupRequest extends Message<GetGroupRequest> {
  /**
   * [Required] The group resource name. Written as
   * <code>projects/<var>projectID</var>/groups/<var>group_name</var></code>.
   * Call
   * <a href="/error-reporting/reference/rest/v1beta1/projects.groupStats/list">
   * <code>groupStats.list</code></a> to return a list of groups belonging to
   * this project.
   *
   * Example: <code>projects/my-project-123/groups/my-group</code>
   *
   * @generated from field: string group_name = 1;
   */
  groupName = "";

  constructor(data?: PartialMessage<GetGroupRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.devtools.clouderrorreporting.v1beta1.GetGroupRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "group_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetGroupRequest {
    return new GetGroupRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetGroupRequest {
    return new GetGroupRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetGroupRequest {
    return new GetGroupRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetGroupRequest | PlainMessage<GetGroupRequest> | undefined, b: GetGroupRequest | PlainMessage<GetGroupRequest> | undefined): boolean {
    return proto3.util.equals(GetGroupRequest, a, b);
  }
}

/**
 * A request to replace the existing data for the given group.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.UpdateGroupRequest
 */
export class UpdateGroupRequest extends Message<UpdateGroupRequest> {
  /**
   * [Required] The group which replaces the resource on the server.
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
   */
  group?: ErrorGroup;

  constructor(data?: PartialMessage<UpdateGroupRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.devtools.clouderrorreporting.v1beta1.UpdateGroupRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "group", kind: "message", T: ErrorGroup },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGroupRequest {
    return new UpdateGroupRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGroupRequest {
    return new UpdateGroupRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGroupRequest {
    return new UpdateGroupRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateGroupRequest | PlainMessage<UpdateGroupRequest> | undefined, b: UpdateGroupRequest | PlainMessage<UpdateGroupRequest> | undefined): boolean {
    return proto3.util.equals(UpdateGroupRequest, a, b);
  }
}

