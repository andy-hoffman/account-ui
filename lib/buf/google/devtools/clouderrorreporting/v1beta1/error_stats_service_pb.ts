// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file google/devtools/clouderrorreporting/v1beta1/error_stats_service.proto (package google.devtools.clouderrorreporting.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Duration, Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";
import { ErrorEvent, ErrorGroup, ServiceContext } from "./common_pb.js";

/**
 * Specifies how the time periods of error group counts are aligned.
 *
 * @generated from enum google.devtools.clouderrorreporting.v1beta1.TimedCountAlignment
 */
export enum TimedCountAlignment {
  /**
   * No alignment specified.
   *
   * @generated from enum value: ERROR_COUNT_ALIGNMENT_UNSPECIFIED = 0;
   */
  ERROR_COUNT_ALIGNMENT_UNSPECIFIED = 0,

  /**
   * The time periods shall be consecutive, have width equal to the
   * requested duration, and be aligned at the `alignment_time` provided in
   * the request.
   * The `alignment_time` does not have to be inside the query period but
   * even if it is outside, only time periods are returned which overlap
   * with the query period.
   * A rounded alignment will typically result in a
   * different size of the first or the last time period.
   *
   * @generated from enum value: ALIGNMENT_EQUAL_ROUNDED = 1;
   */
  ALIGNMENT_EQUAL_ROUNDED = 1,

  /**
   * The time periods shall be consecutive, have width equal to the
   * requested duration, and be aligned at the end of the requested time
   * period. This can result in a different size of the
   * first time period.
   *
   * @generated from enum value: ALIGNMENT_EQUAL_AT_END = 2;
   */
  ALIGNMENT_EQUAL_AT_END = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(TimedCountAlignment)
proto3.util.setEnumType(TimedCountAlignment, "google.devtools.clouderrorreporting.v1beta1.TimedCountAlignment", [
  { no: 0, name: "ERROR_COUNT_ALIGNMENT_UNSPECIFIED" },
  { no: 1, name: "ALIGNMENT_EQUAL_ROUNDED" },
  { no: 2, name: "ALIGNMENT_EQUAL_AT_END" },
]);

/**
 * A sorting order of error groups.
 *
 * @generated from enum google.devtools.clouderrorreporting.v1beta1.ErrorGroupOrder
 */
export enum ErrorGroupOrder {
  /**
   * No group order specified.
   *
   * @generated from enum value: GROUP_ORDER_UNSPECIFIED = 0;
   */
  GROUP_ORDER_UNSPECIFIED = 0,

  /**
   * Total count of errors in the given time window in descending order.
   *
   * @generated from enum value: COUNT_DESC = 1;
   */
  COUNT_DESC = 1,

  /**
   * Timestamp when the group was last seen in the given time window
   * in descending order.
   *
   * @generated from enum value: LAST_SEEN_DESC = 2;
   */
  LAST_SEEN_DESC = 2,

  /**
   * Timestamp when the group was created in descending order.
   *
   * @generated from enum value: CREATED_DESC = 3;
   */
  CREATED_DESC = 3,

  /**
   * Number of affected users in the given time window in descending order.
   *
   * @generated from enum value: AFFECTED_USERS_DESC = 4;
   */
  AFFECTED_USERS_DESC = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ErrorGroupOrder)
proto3.util.setEnumType(ErrorGroupOrder, "google.devtools.clouderrorreporting.v1beta1.ErrorGroupOrder", [
  { no: 0, name: "GROUP_ORDER_UNSPECIFIED" },
  { no: 1, name: "COUNT_DESC" },
  { no: 2, name: "LAST_SEEN_DESC" },
  { no: 3, name: "CREATED_DESC" },
  { no: 4, name: "AFFECTED_USERS_DESC" },
]);

/**
 * Specifies a set of `ErrorGroupStats` to return.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest
 */
export class ListGroupStatsRequest extends Message<ListGroupStatsRequest> {
  /**
   * [Required] The resource name of the Google Cloud Platform project. Written
   * as <code>projects/</code> plus the
   * <a href="https://support.google.com/cloud/answer/6158840">Google Cloud
   * Platform project ID</a>.
   *
   * Example: <code>projects/my-project-123</code>.
   *
   * @generated from field: string project_name = 1;
   */
  projectName = "";

  /**
   * [Optional] List all <code>ErrorGroupStats</code> with these IDs.
   *
   * @generated from field: repeated string group_id = 2;
   */
  groupId: string[] = [];

  /**
   * [Optional] List only <code>ErrorGroupStats</code> which belong to a service
   * context that matches the filter.
   * Data for all service contexts is returned if this field is not specified.
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
   */
  serviceFilter?: ServiceContextFilter;

  /**
   * [Optional] List data for the given time range.
   * If not set a default time range is used. The field time_range_begin
   * in the response will specify the beginning of this time range.
   * Only <code>ErrorGroupStats</code> with a non-zero count in the given time
   * range are returned, unless the request contains an explicit group_id list.
   * If a group_id list is given, also <code>ErrorGroupStats</code> with zero
   * occurrences are returned.
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 5;
   */
  timeRange?: QueryTimeRange;

  /**
   * [Optional] The preferred duration for a single returned `TimedCount`.
   * If not set, no timed counts are returned.
   *
   * @generated from field: google.protobuf.Duration timed_count_duration = 6;
   */
  timedCountDuration?: Duration;

  /**
   * [Optional] The alignment of the timed counts to be returned.
   * Default is `ALIGNMENT_EQUAL_AT_END`.
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.TimedCountAlignment alignment = 7;
   */
  alignment = TimedCountAlignment.ERROR_COUNT_ALIGNMENT_UNSPECIFIED;

  /**
   * [Optional] Time where the timed counts shall be aligned if rounded
   * alignment is chosen. Default is 00:00 UTC.
   *
   * @generated from field: google.protobuf.Timestamp alignment_time = 8;
   */
  alignmentTime?: Timestamp;

  /**
   * [Optional] The sort order in which the results are returned.
   * Default is `COUNT_DESC`.
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.ErrorGroupOrder order = 9;
   */
  order = ErrorGroupOrder.GROUP_ORDER_UNSPECIFIED;

  /**
   * [Optional] The maximum number of results to return per response.
   * Default is 20.
   *
   * @generated from field: int32 page_size = 11;
   */
  pageSize = 0;

  /**
   * [Optional] A `next_page_token` provided by a previous response. To view
   * additional results, pass this token along with the identical query
   * parameters as the first request.
   *
   * @generated from field: string page_token = 12;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListGroupStatsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "service_filter", kind: "message", T: ServiceContextFilter },
    { no: 5, name: "time_range", kind: "message", T: QueryTimeRange },
    { no: 6, name: "timed_count_duration", kind: "message", T: Duration },
    { no: 7, name: "alignment", kind: "enum", T: proto3.getEnumType(TimedCountAlignment) },
    { no: 8, name: "alignment_time", kind: "message", T: Timestamp },
    { no: 9, name: "order", kind: "enum", T: proto3.getEnumType(ErrorGroupOrder) },
    { no: 11, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGroupStatsRequest {
    return new ListGroupStatsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGroupStatsRequest {
    return new ListGroupStatsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGroupStatsRequest {
    return new ListGroupStatsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListGroupStatsRequest | PlainMessage<ListGroupStatsRequest> | undefined, b: ListGroupStatsRequest | PlainMessage<ListGroupStatsRequest> | undefined): boolean {
    return proto3.util.equals(ListGroupStatsRequest, a, b);
  }
}

/**
 * Contains a set of requested error group stats.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse
 */
export class ListGroupStatsResponse extends Message<ListGroupStatsResponse> {
  /**
   * The error group stats which match the given request.
   *
   * @generated from field: repeated google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats error_group_stats = 1;
   */
  errorGroupStats: ErrorGroupStats[] = [];

  /**
   * If non-empty, more results are available.
   * Pass this token, along with the same query parameters as the first
   * request, to view the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  /**
   * The timestamp specifies the start time to which the request was restricted.
   * The start time is set based on the requested time range. It may be adjusted
   * to a later time if a project has exceeded the storage quota and older data
   * has been deleted.
   *
   * @generated from field: google.protobuf.Timestamp time_range_begin = 4;
   */
  timeRangeBegin?: Timestamp;

  constructor(data?: PartialMessage<ListGroupStatsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.devtools.clouderrorreporting.v1beta1.ListGroupStatsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "error_group_stats", kind: "message", T: ErrorGroupStats, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "time_range_begin", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGroupStatsResponse {
    return new ListGroupStatsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGroupStatsResponse {
    return new ListGroupStatsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGroupStatsResponse {
    return new ListGroupStatsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListGroupStatsResponse | PlainMessage<ListGroupStatsResponse> | undefined, b: ListGroupStatsResponse | PlainMessage<ListGroupStatsResponse> | undefined): boolean {
    return proto3.util.equals(ListGroupStatsResponse, a, b);
  }
}

/**
 * Data extracted for a specific group based on certain filter criteria,
 * such as a given time period and/or service filter.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats
 */
export class ErrorGroupStats extends Message<ErrorGroupStats> {
  /**
   * Group data that is independent of the filter criteria.
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.ErrorGroup group = 1;
   */
  group?: ErrorGroup;

  /**
   * Approximate total number of events in the given group that match
   * the filter criteria.
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * Approximate number of affected users in the given group that
   * match the filter criteria.
   * Users are distinguished by data in the `ErrorContext` of the
   * individual error events, such as their login name or their remote
   * IP address in case of HTTP requests.
   * The number of affected users can be zero even if the number of
   * errors is non-zero if no data was provided from which the
   * affected user could be deduced.
   * Users are counted based on data in the request
   * context that was provided in the error report. If more users are
   * implicitly affected, such as due to a crash of the whole service,
   * this is not reflected here.
   *
   * @generated from field: int64 affected_users_count = 3;
   */
  affectedUsersCount = protoInt64.zero;

  /**
   * Approximate number of occurrences over time.
   * Timed counts returned by ListGroups are guaranteed to be:
   *
   * - Inside the requested time interval
   * - Non-overlapping, and
   * - Ordered by ascending time.
   *
   * @generated from field: repeated google.devtools.clouderrorreporting.v1beta1.TimedCount timed_counts = 4;
   */
  timedCounts: TimedCount[] = [];

  /**
   * Approximate first occurrence that was ever seen for this group
   * and which matches the given filter criteria, ignoring the
   * time_range that was specified in the request.
   *
   * @generated from field: google.protobuf.Timestamp first_seen_time = 5;
   */
  firstSeenTime?: Timestamp;

  /**
   * Approximate last occurrence that was ever seen for this group and
   * which matches the given filter criteria, ignoring the time_range
   * that was specified in the request.
   *
   * @generated from field: google.protobuf.Timestamp last_seen_time = 6;
   */
  lastSeenTime?: Timestamp;

  /**
   * Service contexts with a non-zero error count for the given filter
   * criteria. This list can be truncated if multiple services are affected.
   * Refer to `num_affected_services` for the total count.
   *
   * @generated from field: repeated google.devtools.clouderrorreporting.v1beta1.ServiceContext affected_services = 7;
   */
  affectedServices: ServiceContext[] = [];

  /**
   * The total number of services with a non-zero error count for the given
   * filter criteria.
   *
   * @generated from field: int32 num_affected_services = 8;
   */
  numAffectedServices = 0;

  /**
   * An arbitrary event that is chosen as representative for the whole group.
   * The representative event is intended to be used as a quick preview for
   * the whole group. Events in the group are usually sufficiently similar
   * to each other such that showing an arbitrary representative provides
   * insight into the characteristics of the group as a whole.
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.ErrorEvent representative = 9;
   */
  representative?: ErrorEvent;

  constructor(data?: PartialMessage<ErrorGroupStats>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.devtools.clouderrorreporting.v1beta1.ErrorGroupStats";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "group", kind: "message", T: ErrorGroup },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "affected_users_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "timed_counts", kind: "message", T: TimedCount, repeated: true },
    { no: 5, name: "first_seen_time", kind: "message", T: Timestamp },
    { no: 6, name: "last_seen_time", kind: "message", T: Timestamp },
    { no: 7, name: "affected_services", kind: "message", T: ServiceContext, repeated: true },
    { no: 8, name: "num_affected_services", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "representative", kind: "message", T: ErrorEvent },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ErrorGroupStats {
    return new ErrorGroupStats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ErrorGroupStats {
    return new ErrorGroupStats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ErrorGroupStats {
    return new ErrorGroupStats().fromJsonString(jsonString, options);
  }

  static equals(a: ErrorGroupStats | PlainMessage<ErrorGroupStats> | undefined, b: ErrorGroupStats | PlainMessage<ErrorGroupStats> | undefined): boolean {
    return proto3.util.equals(ErrorGroupStats, a, b);
  }
}

/**
 * The number of errors in a given time period.
 * All numbers are approximate since the error events are sampled
 * before counting them.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.TimedCount
 */
export class TimedCount extends Message<TimedCount> {
  /**
   * Approximate number of occurrences in the given time period.
   *
   * @generated from field: int64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * Start of the time period to which `count` refers (included).
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * End of the time period to which `count` refers (excluded).
   *
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;

  constructor(data?: PartialMessage<TimedCount>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.devtools.clouderrorreporting.v1beta1.TimedCount";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "start_time", kind: "message", T: Timestamp },
    { no: 3, name: "end_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TimedCount {
    return new TimedCount().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TimedCount {
    return new TimedCount().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TimedCount {
    return new TimedCount().fromJsonString(jsonString, options);
  }

  static equals(a: TimedCount | PlainMessage<TimedCount> | undefined, b: TimedCount | PlainMessage<TimedCount> | undefined): boolean {
    return proto3.util.equals(TimedCount, a, b);
  }
}

/**
 * Specifies a set of error events to return.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.ListEventsRequest
 */
export class ListEventsRequest extends Message<ListEventsRequest> {
  /**
   * [Required] The resource name of the Google Cloud Platform project. Written
   * as `projects/` plus the
   * [Google Cloud Platform project
   * ID](https://support.google.com/cloud/answer/6158840).
   * Example: `projects/my-project-123`.
   *
   * @generated from field: string project_name = 1;
   */
  projectName = "";

  /**
   * [Required] The group for which events shall be returned.
   *
   * @generated from field: string group_id = 2;
   */
  groupId = "";

  /**
   * [Optional] List only ErrorGroups which belong to a service context that
   * matches the filter.
   * Data for all service contexts is returned if this field is not specified.
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter service_filter = 3;
   */
  serviceFilter?: ServiceContextFilter;

  /**
   * [Optional] List only data for the given time range.
   * If not set a default time range is used. The field time_range_begin
   * in the response will specify the beginning of this time range.
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.QueryTimeRange time_range = 4;
   */
  timeRange?: QueryTimeRange;

  /**
   * [Optional] The maximum number of results to return per response.
   *
   * @generated from field: int32 page_size = 6;
   */
  pageSize = 0;

  /**
   * [Optional] A `next_page_token` provided by a previous response.
   *
   * @generated from field: string page_token = 7;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListEventsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.devtools.clouderrorreporting.v1beta1.ListEventsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "service_filter", kind: "message", T: ServiceContextFilter },
    { no: 4, name: "time_range", kind: "message", T: QueryTimeRange },
    { no: 6, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEventsRequest {
    return new ListEventsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEventsRequest {
    return new ListEventsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEventsRequest {
    return new ListEventsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListEventsRequest | PlainMessage<ListEventsRequest> | undefined, b: ListEventsRequest | PlainMessage<ListEventsRequest> | undefined): boolean {
    return proto3.util.equals(ListEventsRequest, a, b);
  }
}

/**
 * Contains a set of requested error events.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.ListEventsResponse
 */
export class ListEventsResponse extends Message<ListEventsResponse> {
  /**
   * The error events which match the given request.
   *
   * @generated from field: repeated google.devtools.clouderrorreporting.v1beta1.ErrorEvent error_events = 1;
   */
  errorEvents: ErrorEvent[] = [];

  /**
   * If non-empty, more results are available.
   * Pass this token, along with the same query parameters as the first
   * request, to view the next page of results.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  /**
   * The timestamp specifies the start time to which the request was restricted.
   *
   * @generated from field: google.protobuf.Timestamp time_range_begin = 4;
   */
  timeRangeBegin?: Timestamp;

  constructor(data?: PartialMessage<ListEventsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.devtools.clouderrorreporting.v1beta1.ListEventsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "error_events", kind: "message", T: ErrorEvent, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "time_range_begin", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEventsResponse {
    return new ListEventsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEventsResponse {
    return new ListEventsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEventsResponse {
    return new ListEventsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListEventsResponse | PlainMessage<ListEventsResponse> | undefined, b: ListEventsResponse | PlainMessage<ListEventsResponse> | undefined): boolean {
    return proto3.util.equals(ListEventsResponse, a, b);
  }
}

/**
 * Requests might be rejected or the resulting timed count durations might be
 * adjusted for lower durations.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.QueryTimeRange
 */
export class QueryTimeRange extends Message<QueryTimeRange> {
  /**
   * Restricts the query to the specified time range.
   *
   * @generated from field: google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.Period period = 1;
   */
  period = QueryTimeRange_Period.PERIOD_UNSPECIFIED;

  constructor(data?: PartialMessage<QueryTimeRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.devtools.clouderrorreporting.v1beta1.QueryTimeRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "period", kind: "enum", T: proto3.getEnumType(QueryTimeRange_Period) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryTimeRange {
    return new QueryTimeRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryTimeRange {
    return new QueryTimeRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryTimeRange {
    return new QueryTimeRange().fromJsonString(jsonString, options);
  }

  static equals(a: QueryTimeRange | PlainMessage<QueryTimeRange> | undefined, b: QueryTimeRange | PlainMessage<QueryTimeRange> | undefined): boolean {
    return proto3.util.equals(QueryTimeRange, a, b);
  }
}

/**
 * The supported time ranges.
 *
 * @generated from enum google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.Period
 */
export enum QueryTimeRange_Period {
  /**
   * Do not use.
   *
   * @generated from enum value: PERIOD_UNSPECIFIED = 0;
   */
  PERIOD_UNSPECIFIED = 0,

  /**
   * Retrieve data for the last hour.
   * Recommended minimum timed count duration: 1 min.
   *
   * @generated from enum value: PERIOD_1_HOUR = 1;
   */
  PERIOD_1_HOUR = 1,

  /**
   * Retrieve data for the last 6 hours.
   * Recommended minimum timed count duration: 10 min.
   *
   * @generated from enum value: PERIOD_6_HOURS = 2;
   */
  PERIOD_6_HOURS = 2,

  /**
   * Retrieve data for the last day.
   * Recommended minimum timed count duration: 1 hour.
   *
   * @generated from enum value: PERIOD_1_DAY = 3;
   */
  PERIOD_1_DAY = 3,

  /**
   * Retrieve data for the last week.
   * Recommended minimum timed count duration: 6 hours.
   *
   * @generated from enum value: PERIOD_1_WEEK = 4;
   */
  PERIOD_1_WEEK = 4,

  /**
   * Retrieve data for the last 30 days.
   * Recommended minimum timed count duration: 1 day.
   *
   * @generated from enum value: PERIOD_30_DAYS = 5;
   */
  PERIOD_30_DAYS = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(QueryTimeRange_Period)
proto3.util.setEnumType(QueryTimeRange_Period, "google.devtools.clouderrorreporting.v1beta1.QueryTimeRange.Period", [
  { no: 0, name: "PERIOD_UNSPECIFIED" },
  { no: 1, name: "PERIOD_1_HOUR" },
  { no: 2, name: "PERIOD_6_HOURS" },
  { no: 3, name: "PERIOD_1_DAY" },
  { no: 4, name: "PERIOD_1_WEEK" },
  { no: 5, name: "PERIOD_30_DAYS" },
]);

/**
 * Specifies criteria for filtering a subset of service contexts.
 * The fields in the filter correspond to the fields in `ServiceContext`.
 * Only exact, case-sensitive matches are supported.
 * If a field is unset or empty, it matches arbitrary values.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter
 */
export class ServiceContextFilter extends Message<ServiceContextFilter> {
  /**
   * [Optional] The exact value to match against
   * [`ServiceContext.service`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service).
   *
   * @generated from field: string service = 2;
   */
  service = "";

  /**
   * [Optional] The exact value to match against
   * [`ServiceContext.version`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version).
   *
   * @generated from field: string version = 3;
   */
  version = "";

  /**
   * [Optional] The exact value to match against
   * [`ServiceContext.resource_type`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type).
   *
   * @generated from field: string resource_type = 4;
   */
  resourceType = "";

  constructor(data?: PartialMessage<ServiceContextFilter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.devtools.clouderrorreporting.v1beta1.ServiceContextFilter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "service", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "resource_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceContextFilter {
    return new ServiceContextFilter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceContextFilter {
    return new ServiceContextFilter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceContextFilter {
    return new ServiceContextFilter().fromJsonString(jsonString, options);
  }

  static equals(a: ServiceContextFilter | PlainMessage<ServiceContextFilter> | undefined, b: ServiceContextFilter | PlainMessage<ServiceContextFilter> | undefined): boolean {
    return proto3.util.equals(ServiceContextFilter, a, b);
  }
}

/**
 * Deletes all events in the project.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest
 */
export class DeleteEventsRequest extends Message<DeleteEventsRequest> {
  /**
   * [Required] The resource name of the Google Cloud Platform project. Written
   * as `projects/` plus the
   * [Google Cloud Platform project
   * ID](https://support.google.com/cloud/answer/6158840).
   * Example: `projects/my-project-123`.
   *
   * @generated from field: string project_name = 1;
   */
  projectName = "";

  constructor(data?: PartialMessage<DeleteEventsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.devtools.clouderrorreporting.v1beta1.DeleteEventsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteEventsRequest {
    return new DeleteEventsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteEventsRequest {
    return new DeleteEventsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteEventsRequest {
    return new DeleteEventsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteEventsRequest | PlainMessage<DeleteEventsRequest> | undefined, b: DeleteEventsRequest | PlainMessage<DeleteEventsRequest> | undefined): boolean {
    return proto3.util.equals(DeleteEventsRequest, a, b);
  }
}

/**
 * Response message for deleting error events.
 *
 * @generated from message google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse
 */
export class DeleteEventsResponse extends Message<DeleteEventsResponse> {
  constructor(data?: PartialMessage<DeleteEventsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.devtools.clouderrorreporting.v1beta1.DeleteEventsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteEventsResponse {
    return new DeleteEventsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteEventsResponse {
    return new DeleteEventsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteEventsResponse {
    return new DeleteEventsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteEventsResponse | PlainMessage<DeleteEventsResponse> | undefined, b: DeleteEventsResponse | PlainMessage<DeleteEventsResponse> | undefined): boolean {
    return proto3.util.equals(DeleteEventsResponse, a, b);
  }
}

