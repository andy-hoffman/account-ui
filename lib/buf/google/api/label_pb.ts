// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file google/api/label.proto (package google.api, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * A description of a label.
 *
 * @generated from message google.api.LabelDescriptor
 */
export class LabelDescriptor extends Message<LabelDescriptor> {
  /**
   * The label key.
   *
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * The type of data that can be assigned to the label.
   *
   * @generated from field: google.api.LabelDescriptor.ValueType value_type = 2;
   */
  valueType = LabelDescriptor_ValueType.STRING;

  /**
   * A human-readable description for the label.
   *
   * @generated from field: string description = 3;
   */
  description = "";

  constructor(data?: PartialMessage<LabelDescriptor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.LabelDescriptor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value_type", kind: "enum", T: proto3.getEnumType(LabelDescriptor_ValueType) },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LabelDescriptor {
    return new LabelDescriptor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LabelDescriptor {
    return new LabelDescriptor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LabelDescriptor {
    return new LabelDescriptor().fromJsonString(jsonString, options);
  }

  static equals(a: LabelDescriptor | PlainMessage<LabelDescriptor> | undefined, b: LabelDescriptor | PlainMessage<LabelDescriptor> | undefined): boolean {
    return proto3.util.equals(LabelDescriptor, a, b);
  }
}

/**
 * Value types that can be used as label values.
 *
 * @generated from enum google.api.LabelDescriptor.ValueType
 */
export enum LabelDescriptor_ValueType {
  /**
   * A variable-length string. This is the default.
   *
   * @generated from enum value: STRING = 0;
   */
  STRING = 0,

  /**
   * Boolean; true or false.
   *
   * @generated from enum value: BOOL = 1;
   */
  BOOL = 1,

  /**
   * A 64-bit signed integer.
   *
   * @generated from enum value: INT64 = 2;
   */
  INT64 = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(LabelDescriptor_ValueType)
proto3.util.setEnumType(LabelDescriptor_ValueType, "google.api.LabelDescriptor.ValueType", [
  { no: 0, name: "STRING" },
  { no: 1, name: "BOOL" },
  { no: 2, name: "INT64" },
]);

