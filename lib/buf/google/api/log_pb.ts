// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file google/api/log.proto (package google.api, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { LabelDescriptor } from "./label_pb.js";

/**
 * A description of a log type. Example in YAML format:
 *
 *     - name: library.googleapis.com/activity_history
 *       description: The history of borrowing and returning library items.
 *       display_name: Activity
 *       labels:
 *       - key: /customer_id
 *         description: Identifier of a library customer
 *
 * @generated from message google.api.LogDescriptor
 */
export class LogDescriptor extends Message<LogDescriptor> {
  /**
   * The name of the log. It must be less than 512 characters long and can
   * include the following characters: upper- and lower-case alphanumeric
   * characters [A-Za-z0-9], and punctuation characters including
   * slash, underscore, hyphen, period [/_-.].
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The set of labels that are available to describe a specific log entry.
   * Runtime requests that contain labels not specified here are
   * considered invalid.
   *
   * @generated from field: repeated google.api.LabelDescriptor labels = 2;
   */
  labels: LabelDescriptor[] = [];

  /**
   * A human-readable description of this log. This information appears in
   * the documentation and can contain details.
   *
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * The human-readable name for this log. This information appears on
   * the user interface and should be concise.
   *
   * @generated from field: string display_name = 4;
   */
  displayName = "";

  constructor(data?: PartialMessage<LogDescriptor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.LogDescriptor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "labels", kind: "message", T: LabelDescriptor, repeated: true },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogDescriptor {
    return new LogDescriptor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogDescriptor {
    return new LogDescriptor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogDescriptor {
    return new LogDescriptor().fromJsonString(jsonString, options);
  }

  static equals(a: LogDescriptor | PlainMessage<LogDescriptor> | undefined, b: LogDescriptor | PlainMessage<LogDescriptor> | undefined): boolean {
    return proto3.util.equals(LogDescriptor, a, b);
  }
}

