// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file google/api/service.proto (package google.api, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Api, Enum, Message, proto3, Type, UInt32Value } from "@bufbuild/protobuf";
import { Documentation } from "./documentation_pb.js";
import { Backend } from "./backend_pb.js";
import { Http } from "./http_pb.js";
import { Quota } from "./quota_pb.js";
import { Authentication } from "./auth_pb.js";
import { Context } from "./context_pb.js";
import { Usage } from "./usage_pb.js";
import { Endpoint } from "./endpoint_pb.js";
import { Control } from "./control_pb.js";
import { LogDescriptor } from "./log_pb.js";
import { MetricDescriptor } from "./metric_pb.js";
import { MonitoredResourceDescriptor } from "./monitored_resource_pb.js";
import { Billing } from "./billing_pb.js";
import { Logging } from "./logging_pb.js";
import { Monitoring } from "./monitoring_pb.js";
import { SystemParameters } from "./system_parameter_pb.js";
import { SourceInfo } from "./source_info_pb.js";
import { Experimental } from "./experimental/experimental_pb.js";

/**
 * `Service` is the root object of Google service configuration schema. It
 * describes basic information about a service, such as the name and the
 * title, and delegates other aspects to sub-sections. Each sub-section is
 * either a proto message or a repeated proto message that configures a
 * specific aspect, such as auth. See each proto message definition for details.
 *
 * Example:
 *
 *     type: google.api.Service
 *     config_version: 3
 *     name: calendar.googleapis.com
 *     title: Google Calendar API
 *     apis:
 *     - name: google.calendar.v3.Calendar
 *     authentication:
 *       providers:
 *       - id: google_calendar_auth
 *         jwks_uri: https://www.googleapis.com/oauth2/v1/certs
 *         issuer: https://securetoken.google.com
 *       rules:
 *       - selector: "*"
 *         requirements:
 *           provider_id: google_calendar_auth
 *
 * @generated from message google.api.Service
 */
export class Service extends Message<Service> {
  /**
   * The semantic version of the service configuration. The config version
   * affects the interpretation of the service configuration. For example,
   * certain features are enabled by default for certain config versions.
   * The latest config version is `3`.
   *
   * @generated from field: google.protobuf.UInt32Value config_version = 20;
   */
  configVersion?: number;

  /**
   * The DNS address at which this service is available,
   * e.g. `calendar.googleapis.com`.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * A unique ID for a specific instance of this message, typically assigned
   * by the client for tracking purpose. If empty, the server may choose to
   * generate one instead.
   *
   * @generated from field: string id = 33;
   */
  id = "";

  /**
   * The product title for this service.
   *
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * The Google project that owns this service.
   *
   * @generated from field: string producer_project_id = 22;
   */
  producerProjectId = "";

  /**
   * A list of API interfaces exported by this service. Only the `name` field
   * of the [google.protobuf.Api][google.protobuf.Api] needs to be provided by the configuration
   * author, as the remaining fields will be derived from the IDL during the
   * normalization process. It is an error to specify an API interface here
   * which cannot be resolved against the associated IDL files.
   *
   * @generated from field: repeated google.protobuf.Api apis = 3;
   */
  apis: Api[] = [];

  /**
   * A list of all proto message types included in this API service.
   * Types referenced directly or indirectly by the `apis` are
   * automatically included.  Messages which are not referenced but
   * shall be included, such as types used by the `google.protobuf.Any` type,
   * should be listed here by name. Example:
   *
   *     types:
   *     - name: google.protobuf.Int32
   *
   * @generated from field: repeated google.protobuf.Type types = 4;
   */
  types: Type[] = [];

  /**
   * A list of all enum types included in this API service.  Enums
   * referenced directly or indirectly by the `apis` are automatically
   * included.  Enums which are not referenced but shall be included
   * should be listed here by name. Example:
   *
   *     enums:
   *     - name: google.someapi.v1.SomeEnum
   *
   * @generated from field: repeated google.protobuf.Enum enums = 5;
   */
  enums: Enum[] = [];

  /**
   * Additional API documentation.
   *
   * @generated from field: google.api.Documentation documentation = 6;
   */
  documentation?: Documentation;

  /**
   * API backend configuration.
   *
   * @generated from field: google.api.Backend backend = 8;
   */
  backend?: Backend;

  /**
   * HTTP configuration.
   *
   * @generated from field: google.api.Http http = 9;
   */
  http?: Http;

  /**
   * Quota configuration.
   *
   * @generated from field: google.api.Quota quota = 10;
   */
  quota?: Quota;

  /**
   * Auth configuration.
   *
   * @generated from field: google.api.Authentication authentication = 11;
   */
  authentication?: Authentication;

  /**
   * Context configuration.
   *
   * @generated from field: google.api.Context context = 12;
   */
  context?: Context;

  /**
   * Configuration controlling usage of this service.
   *
   * @generated from field: google.api.Usage usage = 15;
   */
  usage?: Usage;

  /**
   * Configuration for network endpoints.  If this is empty, then an endpoint
   * with the same name as the service is automatically generated to service all
   * defined APIs.
   *
   * @generated from field: repeated google.api.Endpoint endpoints = 18;
   */
  endpoints: Endpoint[] = [];

  /**
   * Configuration for the service control plane.
   *
   * @generated from field: google.api.Control control = 21;
   */
  control?: Control;

  /**
   * Defines the logs used by this service.
   *
   * @generated from field: repeated google.api.LogDescriptor logs = 23;
   */
  logs: LogDescriptor[] = [];

  /**
   * Defines the metrics used by this service.
   *
   * @generated from field: repeated google.api.MetricDescriptor metrics = 24;
   */
  metrics: MetricDescriptor[] = [];

  /**
   * Defines the monitored resources used by this service. This is required
   * by the [Service.monitoring][google.api.Service.monitoring] and [Service.logging][google.api.Service.logging] configurations.
   *
   * @generated from field: repeated google.api.MonitoredResourceDescriptor monitored_resources = 25;
   */
  monitoredResources: MonitoredResourceDescriptor[] = [];

  /**
   * Billing configuration.
   *
   * @generated from field: google.api.Billing billing = 26;
   */
  billing?: Billing;

  /**
   * Logging configuration.
   *
   * @generated from field: google.api.Logging logging = 27;
   */
  logging?: Logging;

  /**
   * Monitoring configuration.
   *
   * @generated from field: google.api.Monitoring monitoring = 28;
   */
  monitoring?: Monitoring;

  /**
   * System parameter configuration.
   *
   * @generated from field: google.api.SystemParameters system_parameters = 29;
   */
  systemParameters?: SystemParameters;

  /**
   * Output only. The source information for this configuration if available.
   *
   * @generated from field: google.api.SourceInfo source_info = 37;
   */
  sourceInfo?: SourceInfo;

  /**
   * Experimental configuration.
   *
   * @generated from field: google.api.Experimental experimental = 101;
   */
  experimental?: Experimental;

  constructor(data?: PartialMessage<Service>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.Service";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 20, name: "config_version", kind: "message", T: UInt32Value },
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 33, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "producer_project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "apis", kind: "message", T: Api, repeated: true },
    { no: 4, name: "types", kind: "message", T: Type, repeated: true },
    { no: 5, name: "enums", kind: "message", T: Enum, repeated: true },
    { no: 6, name: "documentation", kind: "message", T: Documentation },
    { no: 8, name: "backend", kind: "message", T: Backend },
    { no: 9, name: "http", kind: "message", T: Http },
    { no: 10, name: "quota", kind: "message", T: Quota },
    { no: 11, name: "authentication", kind: "message", T: Authentication },
    { no: 12, name: "context", kind: "message", T: Context },
    { no: 15, name: "usage", kind: "message", T: Usage },
    { no: 18, name: "endpoints", kind: "message", T: Endpoint, repeated: true },
    { no: 21, name: "control", kind: "message", T: Control },
    { no: 23, name: "logs", kind: "message", T: LogDescriptor, repeated: true },
    { no: 24, name: "metrics", kind: "message", T: MetricDescriptor, repeated: true },
    { no: 25, name: "monitored_resources", kind: "message", T: MonitoredResourceDescriptor, repeated: true },
    { no: 26, name: "billing", kind: "message", T: Billing },
    { no: 27, name: "logging", kind: "message", T: Logging },
    { no: 28, name: "monitoring", kind: "message", T: Monitoring },
    { no: 29, name: "system_parameters", kind: "message", T: SystemParameters },
    { no: 37, name: "source_info", kind: "message", T: SourceInfo },
    { no: 101, name: "experimental", kind: "message", T: Experimental },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Service {
    return new Service().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Service {
    return new Service().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Service {
    return new Service().fromJsonString(jsonString, options);
  }

  static equals(a: Service | PlainMessage<Service> | undefined, b: Service | PlainMessage<Service> | undefined): boolean {
    return proto3.util.equals(Service, a, b);
  }
}

