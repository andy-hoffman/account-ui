// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file google/api/servicecontrol/v1/operation.proto (package google.api.servicecontrol.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { MetricValueSet } from "./metric_value_pb.js";
import { LogEntry } from "./log_entry_pb.js";

/**
 * Represents information regarding an operation.
 *
 * @generated from message google.api.servicecontrol.v1.Operation
 */
export class Operation extends Message<Operation> {
  /**
   * Identity of the operation. This must be unique within the scope of the
   * service that generated the operation. If the service calls
   * Check() and Report() on the same operation, the two calls should carry
   * the same id.
   *
   * UUID version 4 is recommended, though not required.
   * In scenarios where an operation is computed from existing information
   * and an idempotent id is desirable for deduplication purpose, UUID version 5
   * is recommended. See RFC 4122 for details.
   *
   * @generated from field: string operation_id = 1;
   */
  operationId = "";

  /**
   * Fully qualified name of the operation. Reserved for future use.
   *
   * @generated from field: string operation_name = 2;
   */
  operationName = "";

  /**
   * Identity of the consumer who is using the service.
   * This field should be filled in for the operations initiated by a
   * consumer, but not for service-initiated operations that are
   * not related to a specific consumer.
   *
   * This can be in one of the following formats:
   *   project:<project_id>,
   *   project_number:<project_number>,
   *   api_key:<api_key>.
   *
   * @generated from field: string consumer_id = 3;
   */
  consumerId = "";

  /**
   * Required. Start time of the operation.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 4;
   */
  startTime?: Timestamp;

  /**
   * End time of the operation.
   * Required when the operation is used in [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
   * but optional when the operation is used in [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
   *
   * @generated from field: google.protobuf.Timestamp end_time = 5;
   */
  endTime?: Timestamp;

  /**
   * Labels describing the operation. Only the following labels are allowed:
   *
   * - Labels describing monitored resources as defined in
   *   the service configuration.
   * - Default labels of metric values. When specified, labels defined in the
   *   metric value override these default.
   * - The following labels defined by Google Cloud Platform:
   *     - `cloud.googleapis.com/location` describing the location where the
   *        operation happened,
   *     - `servicecontrol.googleapis.com/user_agent` describing the user agent
   *        of the API request,
   *     - `servicecontrol.googleapis.com/service_agent` describing the service
   *        used to handle the API request (e.g. ESP),
   *     - `servicecontrol.googleapis.com/platform` describing the platform
   *        where the API is served (e.g. GAE, GCE, GKE).
   *
   * @generated from field: map<string, string> labels = 6;
   */
  labels: { [key: string]: string } = {};

  /**
   * Represents information about this operation. Each MetricValueSet
   * corresponds to a metric defined in the service configuration.
   * The data type used in the MetricValueSet must agree with
   * the data type specified in the metric definition.
   *
   * Within a single operation, it is not allowed to have more than one
   * MetricValue instances that have the same metric names and identical
   * label value combinations. If a request has such duplicated MetricValue
   * instances, the entire request is rejected with
   * an invalid argument error.
   *
   * @generated from field: repeated google.api.servicecontrol.v1.MetricValueSet metric_value_sets = 7;
   */
  metricValueSets: MetricValueSet[] = [];

  /**
   * Represents information to be logged.
   *
   * @generated from field: repeated google.api.servicecontrol.v1.LogEntry log_entries = 8;
   */
  logEntries: LogEntry[] = [];

  /**
   * DO NOT USE. This is an experimental field.
   *
   * @generated from field: google.api.servicecontrol.v1.Operation.Importance importance = 11;
   */
  importance = Operation_Importance.LOW;

  constructor(data?: PartialMessage<Operation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.api.servicecontrol.v1.Operation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "operation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "operation_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "consumer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "start_time", kind: "message", T: Timestamp },
    { no: 5, name: "end_time", kind: "message", T: Timestamp },
    { no: 6, name: "labels", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 7, name: "metric_value_sets", kind: "message", T: MetricValueSet, repeated: true },
    { no: 8, name: "log_entries", kind: "message", T: LogEntry, repeated: true },
    { no: 11, name: "importance", kind: "enum", T: proto3.getEnumType(Operation_Importance) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Operation {
    return new Operation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Operation {
    return new Operation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Operation {
    return new Operation().fromJsonString(jsonString, options);
  }

  static equals(a: Operation | PlainMessage<Operation> | undefined, b: Operation | PlainMessage<Operation> | undefined): boolean {
    return proto3.util.equals(Operation, a, b);
  }
}

/**
 * Defines the importance of the data contained in the operation.
 *
 * @generated from enum google.api.servicecontrol.v1.Operation.Importance
 */
export enum Operation_Importance {
  /**
   * The API implementation may cache and aggregate the data.
   * The data may be lost when rare and unexpected system failures occur.
   *
   * @generated from enum value: LOW = 0;
   */
  LOW = 0,

  /**
   * The API implementation doesn't cache and aggregate the data.
   * If the method returns successfully, it's guaranteed that the data has
   * been persisted in durable storage.
   *
   * @generated from enum value: HIGH = 1;
   */
  HIGH = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(Operation_Importance)
proto3.util.setEnumType(Operation_Importance, "google.api.servicecontrol.v1.Operation.Importance", [
  { no: 0, name: "LOW" },
  { no: 1, name: "HIGH" },
]);

