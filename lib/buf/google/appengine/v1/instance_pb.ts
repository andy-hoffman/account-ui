// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file google/appengine/v1/instance.proto (package google.appengine.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";

/**
 * An Instance resource is the computing unit that App Engine uses to
 * automatically scale an application.
 *
 * @generated from message google.appengine.v1.Instance
 */
export class Instance extends Message<Instance> {
  /**
   * Full path to the Instance resource in the API.
   * Example: `apps/myapp/services/default/versions/v1/instances/instance-1`.
   *
   * @OutputOnly
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Relative name of the instance within the version.
   * Example: `instance-1`.
   *
   * @OutputOnly
   *
   * @generated from field: string id = 2;
   */
  id = "";

  /**
   * App Engine release this instance is running on.
   *
   * @OutputOnly
   *
   * @generated from field: string app_engine_release = 3;
   */
  appEngineRelease = "";

  /**
   * Availability of the instance.
   *
   * @OutputOnly
   *
   * @generated from field: google.appengine.v1.Instance.Availability availability = 4;
   */
  availability = Instance_Availability.UNSPECIFIED;

  /**
   * Name of the virtual machine where this instance lives. Only applicable
   * for instances in App Engine flexible environment.
   *
   * @OutputOnly
   *
   * @generated from field: string vm_name = 5;
   */
  vmName = "";

  /**
   * Zone where the virtual machine is located. Only applicable for instances
   * in App Engine flexible environment.
   *
   * @OutputOnly
   *
   * @generated from field: string vm_zone_name = 6;
   */
  vmZoneName = "";

  /**
   * Virtual machine ID of this instance. Only applicable for instances in
   * App Engine flexible environment.
   *
   * @OutputOnly
   *
   * @generated from field: string vm_id = 7;
   */
  vmId = "";

  /**
   * Time that this instance was started.
   *
   * @OutputOnly
   *
   * @generated from field: google.protobuf.Timestamp start_time = 8;
   */
  startTime?: Timestamp;

  /**
   * Number of requests since this instance was started.
   *
   * @OutputOnly
   *
   * @generated from field: int32 requests = 9;
   */
  requests = 0;

  /**
   * Number of errors since this instance was started.
   *
   * @OutputOnly
   *
   * @generated from field: int32 errors = 10;
   */
  errors = 0;

  /**
   * Average queries per second (QPS) over the last minute.
   *
   * @OutputOnly
   *
   * @generated from field: float qps = 11;
   */
  qps = 0;

  /**
   * Average latency (ms) over the last minute.
   *
   * @OutputOnly
   *
   * @generated from field: int32 average_latency = 12;
   */
  averageLatency = 0;

  /**
   * Total memory in use (bytes).
   *
   * @OutputOnly
   *
   * @generated from field: int64 memory_usage = 13;
   */
  memoryUsage = protoInt64.zero;

  /**
   * Status of the virtual machine where this instance lives. Only applicable
   * for instances in App Engine flexible environment.
   *
   * @OutputOnly
   *
   * @generated from field: string vm_status = 14;
   */
  vmStatus = "";

  /**
   * Whether this instance is in debug mode. Only applicable for instances in
   * App Engine flexible environment.
   *
   * @OutputOnly
   *
   * @generated from field: bool vm_debug_enabled = 15;
   */
  vmDebugEnabled = false;

  constructor(data?: PartialMessage<Instance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.appengine.v1.Instance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "app_engine_release", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "availability", kind: "enum", T: proto3.getEnumType(Instance_Availability) },
    { no: 5, name: "vm_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "vm_zone_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "vm_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "start_time", kind: "message", T: Timestamp },
    { no: 9, name: "requests", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "errors", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "qps", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 12, name: "average_latency", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "memory_usage", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 14, name: "vm_status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "vm_debug_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Instance {
    return new Instance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Instance {
    return new Instance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Instance {
    return new Instance().fromJsonString(jsonString, options);
  }

  static equals(a: Instance | PlainMessage<Instance> | undefined, b: Instance | PlainMessage<Instance> | undefined): boolean {
    return proto3.util.equals(Instance, a, b);
  }
}

/**
 * Availability of the instance.
 *
 * @generated from enum google.appengine.v1.Instance.Availability
 */
export enum Instance_Availability {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: RESIDENT = 1;
   */
  RESIDENT = 1,

  /**
   * @generated from enum value: DYNAMIC = 2;
   */
  DYNAMIC = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(Instance_Availability)
proto3.util.setEnumType(Instance_Availability, "google.appengine.v1.Instance.Availability", [
  { no: 0, name: "UNSPECIFIED" },
  { no: 1, name: "RESIDENT" },
  { no: 2, name: "DYNAMIC" },
]);

