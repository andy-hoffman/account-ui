// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file google/appengine/v1/audit_data.proto (package google.appengine.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { CreateVersionRequest, UpdateServiceRequest } from "./appengine_pb.js";

/**
 * App Engine admin service audit log.
 *
 * @generated from message google.appengine.v1.AuditData
 */
export class AuditData extends Message<AuditData> {
  /**
   * Detailed information about methods that require it. Does not include
   * simple Get, List or Delete methods because all significant information
   * (resource name, number of returned elements for List operations) is already
   * included in parent audit log message.
   *
   * @generated from oneof google.appengine.v1.AuditData.method
   */
  method: {
    /**
     * Detailed information about UpdateService call.
     *
     * @generated from field: google.appengine.v1.UpdateServiceMethod update_service = 1;
     */
    value: UpdateServiceMethod;
    case: "updateService";
  } | {
    /**
     * Detailed information about CreateVersion call.
     *
     * @generated from field: google.appengine.v1.CreateVersionMethod create_version = 2;
     */
    value: CreateVersionMethod;
    case: "createVersion";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<AuditData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.appengine.v1.AuditData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "update_service", kind: "message", T: UpdateServiceMethod, oneof: "method" },
    { no: 2, name: "create_version", kind: "message", T: CreateVersionMethod, oneof: "method" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditData {
    return new AuditData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditData {
    return new AuditData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditData {
    return new AuditData().fromJsonString(jsonString, options);
  }

  static equals(a: AuditData | PlainMessage<AuditData> | undefined, b: AuditData | PlainMessage<AuditData> | undefined): boolean {
    return proto3.util.equals(AuditData, a, b);
  }
}

/**
 * Detailed information about UpdateService call.
 *
 * @generated from message google.appengine.v1.UpdateServiceMethod
 */
export class UpdateServiceMethod extends Message<UpdateServiceMethod> {
  /**
   * Update service request.
   *
   * @generated from field: google.appengine.v1.UpdateServiceRequest request = 1;
   */
  request?: UpdateServiceRequest;

  constructor(data?: PartialMessage<UpdateServiceMethod>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.appengine.v1.UpdateServiceMethod";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "request", kind: "message", T: UpdateServiceRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateServiceMethod {
    return new UpdateServiceMethod().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateServiceMethod {
    return new UpdateServiceMethod().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateServiceMethod {
    return new UpdateServiceMethod().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateServiceMethod | PlainMessage<UpdateServiceMethod> | undefined, b: UpdateServiceMethod | PlainMessage<UpdateServiceMethod> | undefined): boolean {
    return proto3.util.equals(UpdateServiceMethod, a, b);
  }
}

/**
 * Detailed information about CreateVersion call.
 *
 * @generated from message google.appengine.v1.CreateVersionMethod
 */
export class CreateVersionMethod extends Message<CreateVersionMethod> {
  /**
   * Create version request.
   *
   * @generated from field: google.appengine.v1.CreateVersionRequest request = 1;
   */
  request?: CreateVersionRequest;

  constructor(data?: PartialMessage<CreateVersionMethod>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.appengine.v1.CreateVersionMethod";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "request", kind: "message", T: CreateVersionRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateVersionMethod {
    return new CreateVersionMethod().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateVersionMethod {
    return new CreateVersionMethod().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateVersionMethod {
    return new CreateVersionMethod().fromJsonString(jsonString, options);
  }

  static equals(a: CreateVersionMethod | PlainMessage<CreateVersionMethod> | undefined, b: CreateVersionMethod | PlainMessage<CreateVersionMethod> | undefined): boolean {
    return proto3.util.equals(CreateVersionMethod, a, b);
  }
}

