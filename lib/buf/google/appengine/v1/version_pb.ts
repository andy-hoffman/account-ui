// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file google/appengine/v1/version.proto (package google.appengine.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Duration, Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";
import { ApiConfigHandler, ErrorHandler, HealthCheck, Library, UrlMap } from "./app_yaml_pb.js";
import { Deployment } from "./deploy_pb.js";

/**
 * Available inbound services.
 *
 * @generated from enum google.appengine.v1.InboundServiceType
 */
export enum InboundServiceType {
  /**
   * Not specified.
   *
   * @generated from enum value: INBOUND_SERVICE_UNSPECIFIED = 0;
   */
  INBOUND_SERVICE_UNSPECIFIED = 0,

  /**
   * Allows an application to receive mail.
   *
   * @generated from enum value: INBOUND_SERVICE_MAIL = 1;
   */
  INBOUND_SERVICE_MAIL = 1,

  /**
   * Allows an application to receive email-bound notifications.
   *
   * @generated from enum value: INBOUND_SERVICE_MAIL_BOUNCE = 2;
   */
  INBOUND_SERVICE_MAIL_BOUNCE = 2,

  /**
   * Allows an application to receive error stanzas.
   *
   * @generated from enum value: INBOUND_SERVICE_XMPP_ERROR = 3;
   */
  INBOUND_SERVICE_XMPP_ERROR = 3,

  /**
   * Allows an application to receive instant messages.
   *
   * @generated from enum value: INBOUND_SERVICE_XMPP_MESSAGE = 4;
   */
  INBOUND_SERVICE_XMPP_MESSAGE = 4,

  /**
   * Allows an application to receive user subscription POSTs.
   *
   * @generated from enum value: INBOUND_SERVICE_XMPP_SUBSCRIBE = 5;
   */
  INBOUND_SERVICE_XMPP_SUBSCRIBE = 5,

  /**
   * Allows an application to receive a user's chat presence.
   *
   * @generated from enum value: INBOUND_SERVICE_XMPP_PRESENCE = 6;
   */
  INBOUND_SERVICE_XMPP_PRESENCE = 6,

  /**
   * Registers an application for notifications when a client connects or
   * disconnects from a channel.
   *
   * @generated from enum value: INBOUND_SERVICE_CHANNEL_PRESENCE = 7;
   */
  INBOUND_SERVICE_CHANNEL_PRESENCE = 7,

  /**
   * Enables warmup requests.
   *
   * @generated from enum value: INBOUND_SERVICE_WARMUP = 9;
   */
  INBOUND_SERVICE_WARMUP = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(InboundServiceType)
proto3.util.setEnumType(InboundServiceType, "google.appengine.v1.InboundServiceType", [
  { no: 0, name: "INBOUND_SERVICE_UNSPECIFIED" },
  { no: 1, name: "INBOUND_SERVICE_MAIL" },
  { no: 2, name: "INBOUND_SERVICE_MAIL_BOUNCE" },
  { no: 3, name: "INBOUND_SERVICE_XMPP_ERROR" },
  { no: 4, name: "INBOUND_SERVICE_XMPP_MESSAGE" },
  { no: 5, name: "INBOUND_SERVICE_XMPP_SUBSCRIBE" },
  { no: 6, name: "INBOUND_SERVICE_XMPP_PRESENCE" },
  { no: 7, name: "INBOUND_SERVICE_CHANNEL_PRESENCE" },
  { no: 9, name: "INBOUND_SERVICE_WARMUP" },
]);

/**
 * Run states of a version.
 *
 * @generated from enum google.appengine.v1.ServingStatus
 */
export enum ServingStatus {
  /**
   * Not specified.
   *
   * @generated from enum value: SERVING_STATUS_UNSPECIFIED = 0;
   */
  SERVING_STATUS_UNSPECIFIED = 0,

  /**
   * Currently serving. Instances are created according to the
   * scaling settings of the version.
   *
   * @generated from enum value: SERVING = 1;
   */
  SERVING = 1,

  /**
   * Disabled. No instances will be created and the scaling
   * settings are ignored until the state of the version changes
   * to `SERVING`.
   *
   * @generated from enum value: STOPPED = 2;
   */
  STOPPED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ServingStatus)
proto3.util.setEnumType(ServingStatus, "google.appengine.v1.ServingStatus", [
  { no: 0, name: "SERVING_STATUS_UNSPECIFIED" },
  { no: 1, name: "SERVING" },
  { no: 2, name: "STOPPED" },
]);

/**
 * A Version resource is a specific set of source code and configuration files
 * that are deployed into a service.
 *
 * @generated from message google.appengine.v1.Version
 */
export class Version extends Message<Version> {
  /**
   * Full path to the Version resource in the API.  Example:
   * `apps/myapp/services/default/versions/v1`.
   *
   * @OutputOnly
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Relative name of the version within the service.  Example: `v1`.
   * Version names can contain only lowercase letters, numbers, or hyphens.
   * Reserved names: "default", "latest", and any name with the prefix "ah-".
   *
   * @generated from field: string id = 2;
   */
  id = "";

  /**
   * Controls how instances are created.
   *
   * Defaults to `AutomaticScaling`.
   *
   * @generated from oneof google.appengine.v1.Version.scaling
   */
  scaling: {
    /**
     * Automatic scaling is based on request rate, response latencies, and other
     * application metrics.
     *
     * @generated from field: google.appengine.v1.AutomaticScaling automatic_scaling = 3;
     */
    value: AutomaticScaling;
    case: "automaticScaling";
  } | {
    /**
     * A service with basic scaling will create an instance when the application
     * receives a request. The instance will be turned down when the app becomes
     * idle. Basic scaling is ideal for work that is intermittent or driven by
     * user activity.
     *
     * @generated from field: google.appengine.v1.BasicScaling basic_scaling = 4;
     */
    value: BasicScaling;
    case: "basicScaling";
  } | {
    /**
     * A service with manual scaling runs continuously, allowing you to perform
     * complex initialization and rely on the state of its memory over time.
     *
     * @generated from field: google.appengine.v1.ManualScaling manual_scaling = 5;
     */
    value: ManualScaling;
    case: "manualScaling";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * Before an application can receive email or XMPP messages, the application
   * must be configured to enable the service.
   *
   * @generated from field: repeated google.appengine.v1.InboundServiceType inbound_services = 6;
   */
  inboundServices: InboundServiceType[] = [];

  /**
   * Instance class that is used to run this version. Valid values are:
   * * AutomaticScaling: `F1`, `F2`, `F4`, `F4_1G`
   * * ManualScaling or BasicScaling: `B1`, `B2`, `B4`, `B8`, `B4_1G`
   *
   * Defaults to `F1` for AutomaticScaling and `B1` for ManualScaling or
   * BasicScaling.
   *
   * @generated from field: string instance_class = 7;
   */
  instanceClass = "";

  /**
   * Extra network settings. Only applicable for VM runtimes.
   *
   * @generated from field: google.appengine.v1.Network network = 8;
   */
  network?: Network;

  /**
   * Machine resources for this version. Only applicable for VM runtimes.
   *
   * @generated from field: google.appengine.v1.Resources resources = 9;
   */
  resources?: Resources;

  /**
   * Desired runtime. Example: `python27`.
   *
   * @generated from field: string runtime = 10;
   */
  runtime = "";

  /**
   * Whether multiple requests can be dispatched to this version at once.
   *
   * @generated from field: bool threadsafe = 11;
   */
  threadsafe = false;

  /**
   * Whether to deploy this version in a container on a virtual machine.
   *
   * @generated from field: bool vm = 12;
   */
  vm = false;

  /**
   * Metadata settings that are supplied to this version to enable
   * beta runtime features.
   *
   * @generated from field: map<string, string> beta_settings = 13;
   */
  betaSettings: { [key: string]: string } = {};

  /**
   * App Engine execution environment for this version.
   *
   * Defaults to `standard`.
   *
   * @generated from field: string env = 14;
   */
  env = "";

  /**
   * Current serving status of this version. Only the versions with a
   * `SERVING` status create instances and can be billed.
   *
   * `SERVING_STATUS_UNSPECIFIED` is an invalid value. Defaults to `SERVING`.
   *
   * @generated from field: google.appengine.v1.ServingStatus serving_status = 15;
   */
  servingStatus = ServingStatus.SERVING_STATUS_UNSPECIFIED;

  /**
   * Email address of the user who created this version.
   *
   * @OutputOnly
   *
   * @generated from field: string created_by = 16;
   */
  createdBy = "";

  /**
   * Time that this version was created.
   *
   * @OutputOnly
   *
   * @generated from field: google.protobuf.Timestamp create_time = 17;
   */
  createTime?: Timestamp;

  /**
   * Total size in bytes of all the files that are included in this version
   * and curerntly hosted on the App Engine disk.
   *
   * @OutputOnly
   *
   * @generated from field: int64 disk_usage_bytes = 18;
   */
  diskUsageBytes = protoInt64.zero;

  /**
   * An ordered list of URL-matching patterns that should be applied to incoming
   * requests. The first matching URL handles the request and other request
   * handlers are not attempted.
   *
   * Only returned in `GET` requests if `view=FULL` is set.
   *
   * @generated from field: repeated google.appengine.v1.UrlMap handlers = 100;
   */
  handlers: UrlMap[] = [];

  /**
   * Custom static error pages. Limited to 10KB per page.
   *
   * Only returned in `GET` requests if `view=FULL` is set.
   *
   * @generated from field: repeated google.appengine.v1.ErrorHandler error_handlers = 101;
   */
  errorHandlers: ErrorHandler[] = [];

  /**
   * Configuration for third-party Python runtime libraries that are required
   * by the application.
   *
   * Only returned in `GET` requests if `view=FULL` is set.
   *
   * @generated from field: repeated google.appengine.v1.Library libraries = 102;
   */
  libraries: Library[] = [];

  /**
   * Serving configuration for
   * [Google Cloud Endpoints](https://cloud.google.com/appengine/docs/python/endpoints/).
   *
   * Only returned in `GET` requests if `view=FULL` is set.
   *
   * @generated from field: google.appengine.v1.ApiConfigHandler api_config = 103;
   */
  apiConfig?: ApiConfigHandler;

  /**
   * Environment variables available to the application.
   *
   * Only returned in `GET` requests if `view=FULL` is set.
   *
   * @generated from field: map<string, string> env_variables = 104;
   */
  envVariables: { [key: string]: string } = {};

  /**
   * Duration that static files should be cached by web proxies and browsers.
   * Only applicable if the corresponding
   * [StaticFilesHandler](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#staticfileshandler)
   * does not specify its own expiration time.
   *
   * Only returned in `GET` requests if `view=FULL` is set.
   *
   * @generated from field: google.protobuf.Duration default_expiration = 105;
   */
  defaultExpiration?: Duration;

  /**
   * Configures health checking for VM instances. Unhealthy instances are
   * stopped and replaced with new instances. Only applicable for VM
   * runtimes.
   *
   * Only returned in `GET` requests if `view=FULL` is set.
   *
   * @generated from field: google.appengine.v1.HealthCheck health_check = 106;
   */
  healthCheck?: HealthCheck;

  /**
   * Files that match this pattern will not be built into this version.
   * Only applicable for Go runtimes.
   *
   * Only returned in `GET` requests if `view=FULL` is set.
   *
   * @generated from field: string nobuild_files_regex = 107;
   */
  nobuildFilesRegex = "";

  /**
   * Code and application artifacts that make up this version.
   *
   * Only returned in `GET` requests if `view=FULL` is set.
   *
   * @generated from field: google.appengine.v1.Deployment deployment = 108;
   */
  deployment?: Deployment;

  /**
   * Serving URL for this version. Example:
   * "https://myversion-dot-myservice-dot-myapp.appspot.com"
   *
   * @OutputOnly
   *
   * @generated from field: string version_url = 109;
   */
  versionUrl = "";

  constructor(data?: PartialMessage<Version>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.appengine.v1.Version";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "automatic_scaling", kind: "message", T: AutomaticScaling, oneof: "scaling" },
    { no: 4, name: "basic_scaling", kind: "message", T: BasicScaling, oneof: "scaling" },
    { no: 5, name: "manual_scaling", kind: "message", T: ManualScaling, oneof: "scaling" },
    { no: 6, name: "inbound_services", kind: "enum", T: proto3.getEnumType(InboundServiceType), repeated: true },
    { no: 7, name: "instance_class", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "network", kind: "message", T: Network },
    { no: 9, name: "resources", kind: "message", T: Resources },
    { no: 10, name: "runtime", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "threadsafe", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "vm", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "beta_settings", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 14, name: "env", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "serving_status", kind: "enum", T: proto3.getEnumType(ServingStatus) },
    { no: 16, name: "created_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "create_time", kind: "message", T: Timestamp },
    { no: 18, name: "disk_usage_bytes", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 100, name: "handlers", kind: "message", T: UrlMap, repeated: true },
    { no: 101, name: "error_handlers", kind: "message", T: ErrorHandler, repeated: true },
    { no: 102, name: "libraries", kind: "message", T: Library, repeated: true },
    { no: 103, name: "api_config", kind: "message", T: ApiConfigHandler },
    { no: 104, name: "env_variables", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 105, name: "default_expiration", kind: "message", T: Duration },
    { no: 106, name: "health_check", kind: "message", T: HealthCheck },
    { no: 107, name: "nobuild_files_regex", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 108, name: "deployment", kind: "message", T: Deployment },
    { no: 109, name: "version_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Version {
    return new Version().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Version {
    return new Version().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Version {
    return new Version().fromJsonString(jsonString, options);
  }

  static equals(a: Version | PlainMessage<Version> | undefined, b: Version | PlainMessage<Version> | undefined): boolean {
    return proto3.util.equals(Version, a, b);
  }
}

/**
 * Automatic scaling is based on request rate, response latencies, and other
 * application metrics.
 *
 * @generated from message google.appengine.v1.AutomaticScaling
 */
export class AutomaticScaling extends Message<AutomaticScaling> {
  /**
   * Amount of time that the
   * [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/)
   * should wait between changes to the number of virtual machines.
   * Only applicable for VM runtimes.
   *
   * @generated from field: google.protobuf.Duration cool_down_period = 1;
   */
  coolDownPeriod?: Duration;

  /**
   * Target scaling by CPU usage.
   *
   * @generated from field: google.appengine.v1.CpuUtilization cpu_utilization = 2;
   */
  cpuUtilization?: CpuUtilization;

  /**
   * Number of concurrent requests an automatic scaling instance can accept
   * before the scheduler spawns a new instance.
   *
   * Defaults to a runtime-specific value.
   *
   * @generated from field: int32 max_concurrent_requests = 3;
   */
  maxConcurrentRequests = 0;

  /**
   * Maximum number of idle instances that should be maintained for this
   * version.
   *
   * @generated from field: int32 max_idle_instances = 4;
   */
  maxIdleInstances = 0;

  /**
   * Maximum number of instances that should be started to handle requests.
   *
   * @generated from field: int32 max_total_instances = 5;
   */
  maxTotalInstances = 0;

  /**
   * Maximum amount of time that a request should wait in the pending queue
   * before starting a new instance to handle it.
   *
   * @generated from field: google.protobuf.Duration max_pending_latency = 6;
   */
  maxPendingLatency?: Duration;

  /**
   * Minimum number of idle instances that should be maintained for
   * this version. Only applicable for the default version of a service.
   *
   * @generated from field: int32 min_idle_instances = 7;
   */
  minIdleInstances = 0;

  /**
   * Minimum number of instances that should be maintained for this version.
   *
   * @generated from field: int32 min_total_instances = 8;
   */
  minTotalInstances = 0;

  /**
   * Minimum amount of time a request should wait in the pending queue before
   * starting a new instance to handle it.
   *
   * @generated from field: google.protobuf.Duration min_pending_latency = 9;
   */
  minPendingLatency?: Duration;

  /**
   * Target scaling by request utilization.
   *
   * @generated from field: google.appengine.v1.RequestUtilization request_utilization = 10;
   */
  requestUtilization?: RequestUtilization;

  /**
   * Target scaling by disk usage.
   *
   * @generated from field: google.appengine.v1.DiskUtilization disk_utilization = 11;
   */
  diskUtilization?: DiskUtilization;

  /**
   * Target scaling by network usage.
   *
   * @generated from field: google.appengine.v1.NetworkUtilization network_utilization = 12;
   */
  networkUtilization?: NetworkUtilization;

  constructor(data?: PartialMessage<AutomaticScaling>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.appengine.v1.AutomaticScaling";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "cool_down_period", kind: "message", T: Duration },
    { no: 2, name: "cpu_utilization", kind: "message", T: CpuUtilization },
    { no: 3, name: "max_concurrent_requests", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "max_idle_instances", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "max_total_instances", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "max_pending_latency", kind: "message", T: Duration },
    { no: 7, name: "min_idle_instances", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "min_total_instances", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "min_pending_latency", kind: "message", T: Duration },
    { no: 10, name: "request_utilization", kind: "message", T: RequestUtilization },
    { no: 11, name: "disk_utilization", kind: "message", T: DiskUtilization },
    { no: 12, name: "network_utilization", kind: "message", T: NetworkUtilization },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AutomaticScaling {
    return new AutomaticScaling().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AutomaticScaling {
    return new AutomaticScaling().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AutomaticScaling {
    return new AutomaticScaling().fromJsonString(jsonString, options);
  }

  static equals(a: AutomaticScaling | PlainMessage<AutomaticScaling> | undefined, b: AutomaticScaling | PlainMessage<AutomaticScaling> | undefined): boolean {
    return proto3.util.equals(AutomaticScaling, a, b);
  }
}

/**
 * A service with basic scaling will create an instance when the application
 * receives a request. The instance will be turned down when the app becomes
 * idle. Basic scaling is ideal for work that is intermittent or driven by
 * user activity.
 *
 * @generated from message google.appengine.v1.BasicScaling
 */
export class BasicScaling extends Message<BasicScaling> {
  /**
   * Duration of time after the last request that an instance must wait before
   * the instance is shut down.
   *
   * @generated from field: google.protobuf.Duration idle_timeout = 1;
   */
  idleTimeout?: Duration;

  /**
   * Maximum number of instances to create for this version.
   *
   * @generated from field: int32 max_instances = 2;
   */
  maxInstances = 0;

  constructor(data?: PartialMessage<BasicScaling>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.appengine.v1.BasicScaling";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idle_timeout", kind: "message", T: Duration },
    { no: 2, name: "max_instances", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicScaling {
    return new BasicScaling().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicScaling {
    return new BasicScaling().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicScaling {
    return new BasicScaling().fromJsonString(jsonString, options);
  }

  static equals(a: BasicScaling | PlainMessage<BasicScaling> | undefined, b: BasicScaling | PlainMessage<BasicScaling> | undefined): boolean {
    return proto3.util.equals(BasicScaling, a, b);
  }
}

/**
 * A service with manual scaling runs continuously, allowing you to perform
 * complex initialization and rely on the state of its memory over time.
 *
 * @generated from message google.appengine.v1.ManualScaling
 */
export class ManualScaling extends Message<ManualScaling> {
  /**
   * Number of instances to assign to the service at the start. This number
   * can later be altered by using the
   * [Modules API](https://cloud.google.com/appengine/docs/python/modules/functions)
   * `set_num_instances()` function.
   *
   * @generated from field: int32 instances = 1;
   */
  instances = 0;

  constructor(data?: PartialMessage<ManualScaling>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.appengine.v1.ManualScaling";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "instances", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManualScaling {
    return new ManualScaling().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManualScaling {
    return new ManualScaling().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManualScaling {
    return new ManualScaling().fromJsonString(jsonString, options);
  }

  static equals(a: ManualScaling | PlainMessage<ManualScaling> | undefined, b: ManualScaling | PlainMessage<ManualScaling> | undefined): boolean {
    return proto3.util.equals(ManualScaling, a, b);
  }
}

/**
 * Target scaling by CPU usage.
 *
 * @generated from message google.appengine.v1.CpuUtilization
 */
export class CpuUtilization extends Message<CpuUtilization> {
  /**
   * Period of time over which CPU utilization is calculated.
   *
   * @generated from field: google.protobuf.Duration aggregation_window_length = 1;
   */
  aggregationWindowLength?: Duration;

  /**
   * Target CPU utilization ratio to maintain when scaling. Must be between 0
   * and 1.
   *
   * @generated from field: double target_utilization = 2;
   */
  targetUtilization = 0;

  constructor(data?: PartialMessage<CpuUtilization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.appengine.v1.CpuUtilization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "aggregation_window_length", kind: "message", T: Duration },
    { no: 2, name: "target_utilization", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CpuUtilization {
    return new CpuUtilization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CpuUtilization {
    return new CpuUtilization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CpuUtilization {
    return new CpuUtilization().fromJsonString(jsonString, options);
  }

  static equals(a: CpuUtilization | PlainMessage<CpuUtilization> | undefined, b: CpuUtilization | PlainMessage<CpuUtilization> | undefined): boolean {
    return proto3.util.equals(CpuUtilization, a, b);
  }
}

/**
 * Target scaling by request utilization. Only applicable for VM runtimes.
 *
 * @generated from message google.appengine.v1.RequestUtilization
 */
export class RequestUtilization extends Message<RequestUtilization> {
  /**
   * Target requests per second.
   *
   * @generated from field: int32 target_request_count_per_second = 1;
   */
  targetRequestCountPerSecond = 0;

  /**
   * Target number of concurrent requests.
   *
   * @generated from field: int32 target_concurrent_requests = 2;
   */
  targetConcurrentRequests = 0;

  constructor(data?: PartialMessage<RequestUtilization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.appengine.v1.RequestUtilization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "target_request_count_per_second", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "target_concurrent_requests", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestUtilization {
    return new RequestUtilization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestUtilization {
    return new RequestUtilization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestUtilization {
    return new RequestUtilization().fromJsonString(jsonString, options);
  }

  static equals(a: RequestUtilization | PlainMessage<RequestUtilization> | undefined, b: RequestUtilization | PlainMessage<RequestUtilization> | undefined): boolean {
    return proto3.util.equals(RequestUtilization, a, b);
  }
}

/**
 * Target scaling by disk usage. Only applicable for VM runtimes.
 *
 * @generated from message google.appengine.v1.DiskUtilization
 */
export class DiskUtilization extends Message<DiskUtilization> {
  /**
   * Target bytes written per second.
   *
   * @generated from field: int32 target_write_bytes_per_second = 14;
   */
  targetWriteBytesPerSecond = 0;

  /**
   * Target ops written per second.
   *
   * @generated from field: int32 target_write_ops_per_second = 15;
   */
  targetWriteOpsPerSecond = 0;

  /**
   * Target bytes read per second.
   *
   * @generated from field: int32 target_read_bytes_per_second = 16;
   */
  targetReadBytesPerSecond = 0;

  /**
   * Target ops read per seconds.
   *
   * @generated from field: int32 target_read_ops_per_second = 17;
   */
  targetReadOpsPerSecond = 0;

  constructor(data?: PartialMessage<DiskUtilization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.appengine.v1.DiskUtilization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 14, name: "target_write_bytes_per_second", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 15, name: "target_write_ops_per_second", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 16, name: "target_read_bytes_per_second", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 17, name: "target_read_ops_per_second", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiskUtilization {
    return new DiskUtilization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiskUtilization {
    return new DiskUtilization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiskUtilization {
    return new DiskUtilization().fromJsonString(jsonString, options);
  }

  static equals(a: DiskUtilization | PlainMessage<DiskUtilization> | undefined, b: DiskUtilization | PlainMessage<DiskUtilization> | undefined): boolean {
    return proto3.util.equals(DiskUtilization, a, b);
  }
}

/**
 * Target scaling by network usage. Only applicable for VM runtimes.
 *
 * @generated from message google.appengine.v1.NetworkUtilization
 */
export class NetworkUtilization extends Message<NetworkUtilization> {
  /**
   * Target bytes sent per second.
   *
   * @generated from field: int32 target_sent_bytes_per_second = 1;
   */
  targetSentBytesPerSecond = 0;

  /**
   * Target packets sent per second.
   *
   * @generated from field: int32 target_sent_packets_per_second = 11;
   */
  targetSentPacketsPerSecond = 0;

  /**
   * Target bytes received per second.
   *
   * @generated from field: int32 target_received_bytes_per_second = 12;
   */
  targetReceivedBytesPerSecond = 0;

  /**
   * Target packets received per second.
   *
   * @generated from field: int32 target_received_packets_per_second = 13;
   */
  targetReceivedPacketsPerSecond = 0;

  constructor(data?: PartialMessage<NetworkUtilization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.appengine.v1.NetworkUtilization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "target_sent_bytes_per_second", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "target_sent_packets_per_second", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "target_received_bytes_per_second", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "target_received_packets_per_second", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NetworkUtilization {
    return new NetworkUtilization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NetworkUtilization {
    return new NetworkUtilization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NetworkUtilization {
    return new NetworkUtilization().fromJsonString(jsonString, options);
  }

  static equals(a: NetworkUtilization | PlainMessage<NetworkUtilization> | undefined, b: NetworkUtilization | PlainMessage<NetworkUtilization> | undefined): boolean {
    return proto3.util.equals(NetworkUtilization, a, b);
  }
}

/**
 * Extra network settings. Only applicable for VM runtimes.
 *
 * @generated from message google.appengine.v1.Network
 */
export class Network extends Message<Network> {
  /**
   * List of ports, or port pairs, to forward from the virtual machine to the
   * application container.
   *
   * @generated from field: repeated string forwarded_ports = 1;
   */
  forwardedPorts: string[] = [];

  /**
   * Tag to apply to the VM instance during creation.
   *
   * @generated from field: string instance_tag = 2;
   */
  instanceTag = "";

  /**
   * Google Cloud Platform network where the virtual machines are created.
   * Specify the short name, not the resource path.
   *
   * Defaults to `default`.
   *
   * @generated from field: string name = 3;
   */
  name = "";

  constructor(data?: PartialMessage<Network>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.appengine.v1.Network";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "forwarded_ports", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "instance_tag", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Network {
    return new Network().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Network {
    return new Network().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Network {
    return new Network().fromJsonString(jsonString, options);
  }

  static equals(a: Network | PlainMessage<Network> | undefined, b: Network | PlainMessage<Network> | undefined): boolean {
    return proto3.util.equals(Network, a, b);
  }
}

/**
 * Machine resources for a version.
 *
 * @generated from message google.appengine.v1.Resources
 */
export class Resources extends Message<Resources> {
  /**
   * Number of CPU cores needed.
   *
   * @generated from field: double cpu = 1;
   */
  cpu = 0;

  /**
   * Disk size (GB) needed.
   *
   * @generated from field: double disk_gb = 2;
   */
  diskGb = 0;

  /**
   * Memory (GB) needed.
   *
   * @generated from field: double memory_gb = 3;
   */
  memoryGb = 0;

  constructor(data?: PartialMessage<Resources>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.appengine.v1.Resources";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "cpu", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 2, name: "disk_gb", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 3, name: "memory_gb", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resources {
    return new Resources().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resources {
    return new Resources().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resources {
    return new Resources().fromJsonString(jsonString, options);
  }

  static equals(a: Resources | PlainMessage<Resources> | undefined, b: Resources | PlainMessage<Resources> | undefined): boolean {
    return proto3.util.equals(Resources, a, b);
  }
}

