// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file google/cloud/functions/v1beta2/operations.proto (package google.cloud.functions.v1beta2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";

/**
 * A type of an operation.
 *
 * @generated from enum google.cloud.functions.v1beta2.OperationType
 */
export enum OperationType {
  /**
   * Unknown operation type.
   *
   * @generated from enum value: OPERATION_UNSPECIFIED = 0;
   */
  OPERATION_UNSPECIFIED = 0,

  /**
   * Triggered by CreateFunction call
   *
   * @generated from enum value: CREATE_FUNCTION = 1;
   */
  CREATE_FUNCTION = 1,

  /**
   * Triggered by UpdateFunction call
   *
   * @generated from enum value: UPDATE_FUNCTION = 2;
   */
  UPDATE_FUNCTION = 2,

  /**
   * Triggered by DeleteFunction call.
   *
   * @generated from enum value: DELETE_FUNCTION = 3;
   */
  DELETE_FUNCTION = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(OperationType)
proto3.util.setEnumType(OperationType, "google.cloud.functions.v1beta2.OperationType", [
  { no: 0, name: "OPERATION_UNSPECIFIED" },
  { no: 1, name: "CREATE_FUNCTION" },
  { no: 2, name: "UPDATE_FUNCTION" },
  { no: 3, name: "DELETE_FUNCTION" },
]);

/**
 * Metadata describing an [Operation][google.longrunning.Operation]
 *
 * @generated from message google.cloud.functions.v1beta2.OperationMetadataV1Beta2
 */
export class OperationMetadataV1Beta2 extends Message<OperationMetadataV1Beta2> {
  /**
   * Target of the operation - for example
   * projects/project-1/locations/region-1/functions/function-1
   *
   * @generated from field: string target = 1;
   */
  target = "";

  /**
   * Type of operation.
   *
   * @generated from field: google.cloud.functions.v1beta2.OperationType type = 2;
   */
  type = OperationType.OPERATION_UNSPECIFIED;

  /**
   * The original request that started the operation.
   *
   * @generated from field: google.protobuf.Any request = 3;
   */
  request?: Any;

  constructor(data?: PartialMessage<OperationMetadataV1Beta2>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.functions.v1beta2.OperationMetadataV1Beta2";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "target", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(OperationType) },
    { no: 3, name: "request", kind: "message", T: Any },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationMetadataV1Beta2 {
    return new OperationMetadataV1Beta2().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationMetadataV1Beta2 {
    return new OperationMetadataV1Beta2().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationMetadataV1Beta2 {
    return new OperationMetadataV1Beta2().fromJsonString(jsonString, options);
  }

  static equals(a: OperationMetadataV1Beta2 | PlainMessage<OperationMetadataV1Beta2> | undefined, b: OperationMetadataV1Beta2 | PlainMessage<OperationMetadataV1Beta2> | undefined): boolean {
    return proto3.util.equals(OperationMetadataV1Beta2, a, b);
  }
}

