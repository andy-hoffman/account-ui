// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file google/cloud/dataproc/v1/operations.proto (package google.cloud.dataproc.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * The status of the operation.
 *
 * @generated from message google.cloud.dataproc.v1.ClusterOperationStatus
 */
export class ClusterOperationStatus extends Message<ClusterOperationStatus> {
  /**
   * [Output-only] A message containing the operation state.
   *
   * @generated from field: google.cloud.dataproc.v1.ClusterOperationStatus.State state = 1;
   */
  state = ClusterOperationStatus_State.UNKNOWN;

  /**
   * [Output-only] A message containing the detailed operation state.
   *
   * @generated from field: string inner_state = 2;
   */
  innerState = "";

  /**
   * [Output-only]A message containing any operation metadata details.
   *
   * @generated from field: string details = 3;
   */
  details = "";

  /**
   * [Output-only] The time this state was entered.
   *
   * @generated from field: google.protobuf.Timestamp state_start_time = 4;
   */
  stateStartTime?: Timestamp;

  constructor(data?: PartialMessage<ClusterOperationStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.dataproc.v1.ClusterOperationStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "state", kind: "enum", T: proto3.getEnumType(ClusterOperationStatus_State) },
    { no: 2, name: "inner_state", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "details", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "state_start_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterOperationStatus {
    return new ClusterOperationStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterOperationStatus {
    return new ClusterOperationStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterOperationStatus {
    return new ClusterOperationStatus().fromJsonString(jsonString, options);
  }

  static equals(a: ClusterOperationStatus | PlainMessage<ClusterOperationStatus> | undefined, b: ClusterOperationStatus | PlainMessage<ClusterOperationStatus> | undefined): boolean {
    return proto3.util.equals(ClusterOperationStatus, a, b);
  }
}

/**
 * The operation state.
 *
 * @generated from enum google.cloud.dataproc.v1.ClusterOperationStatus.State
 */
export enum ClusterOperationStatus_State {
  /**
   * Unused.
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * The operation has been created.
   *
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * The operation is running.
   *
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The operation is done; either cancelled or completed.
   *
   * @generated from enum value: DONE = 3;
   */
  DONE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ClusterOperationStatus_State)
proto3.util.setEnumType(ClusterOperationStatus_State, "google.cloud.dataproc.v1.ClusterOperationStatus.State", [
  { no: 0, name: "UNKNOWN" },
  { no: 1, name: "PENDING" },
  { no: 2, name: "RUNNING" },
  { no: 3, name: "DONE" },
]);

/**
 * Metadata describing the operation.
 *
 * @generated from message google.cloud.dataproc.v1.ClusterOperationMetadata
 */
export class ClusterOperationMetadata extends Message<ClusterOperationMetadata> {
  /**
   * [Output-only] Name of the cluster for the operation.
   *
   * @generated from field: string cluster_name = 7;
   */
  clusterName = "";

  /**
   * [Output-only] Cluster UUID for the operation.
   *
   * @generated from field: string cluster_uuid = 8;
   */
  clusterUuid = "";

  /**
   * [Output-only] Current operation status.
   *
   * @generated from field: google.cloud.dataproc.v1.ClusterOperationStatus status = 9;
   */
  status?: ClusterOperationStatus;

  /**
   * [Output-only] The previous operation status.
   *
   * @generated from field: repeated google.cloud.dataproc.v1.ClusterOperationStatus status_history = 10;
   */
  statusHistory: ClusterOperationStatus[] = [];

  /**
   * [Output-only] The operation type.
   *
   * @generated from field: string operation_type = 11;
   */
  operationType = "";

  /**
   * [Output-only] Short description of operation.
   *
   * @generated from field: string description = 12;
   */
  description = "";

  constructor(data?: PartialMessage<ClusterOperationMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.dataproc.v1.ClusterOperationMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 7, name: "cluster_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "cluster_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "status", kind: "message", T: ClusterOperationStatus },
    { no: 10, name: "status_history", kind: "message", T: ClusterOperationStatus, repeated: true },
    { no: 11, name: "operation_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterOperationMetadata {
    return new ClusterOperationMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterOperationMetadata {
    return new ClusterOperationMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterOperationMetadata {
    return new ClusterOperationMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: ClusterOperationMetadata | PlainMessage<ClusterOperationMetadata> | undefined, b: ClusterOperationMetadata | PlainMessage<ClusterOperationMetadata> | undefined): boolean {
    return proto3.util.equals(ClusterOperationMetadata, a, b);
  }
}

