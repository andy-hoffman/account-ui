// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file google/cloud/runtimeconfig/v1beta1/runtimeconfig.proto (package google.cloud.runtimeconfig.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { RuntimeConfig, Variable, Waiter } from "./resources_pb.js";

/**
 * Request for the `ListConfigs()` method.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.ListConfigsRequest
 */
export class ListConfigsRequest extends Message<ListConfigsRequest> {
  /**
   * The [project ID](https://support.google.com/cloud/answer/6158840?hl=en&ref_topic=6158848)
   * for this request, in the format `projects/[PROJECT_ID]`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * Specifies the number of results to return per page. If there are fewer
   * elements than the specified number, returns all elements.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * Specifies a page token to use. Set `pageToken` to a `nextPageToken`
   * returned by a previous list request to get the next page of results.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListConfigsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.ListConfigsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConfigsRequest {
    return new ListConfigsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConfigsRequest {
    return new ListConfigsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConfigsRequest {
    return new ListConfigsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListConfigsRequest | PlainMessage<ListConfigsRequest> | undefined, b: ListConfigsRequest | PlainMessage<ListConfigsRequest> | undefined): boolean {
    return proto3.util.equals(ListConfigsRequest, a, b);
  }
}

/**
 * `ListConfigs()` returns the following response. The order of returned
 * objects is arbitrary; that is, it is not ordered in any particular way.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.ListConfigsResponse
 */
export class ListConfigsResponse extends Message<ListConfigsResponse> {
  /**
   * A list of the configurations in the project. The order of returned
   * objects is arbitrary; that is, it is not ordered in any particular way.
   *
   * @generated from field: repeated google.cloud.runtimeconfig.v1beta1.RuntimeConfig configs = 1;
   */
  configs: RuntimeConfig[] = [];

  /**
   * This token allows you to get the next page of results for list requests.
   * If the number of results is larger than `pageSize`, use the `nextPageToken`
   * as a value for the query parameter `pageToken` in the next list request.
   * Subsequent list requests will have their own `nextPageToken` to continue
   * paging through the results
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListConfigsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.ListConfigsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "configs", kind: "message", T: RuntimeConfig, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConfigsResponse {
    return new ListConfigsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConfigsResponse {
    return new ListConfigsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConfigsResponse {
    return new ListConfigsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListConfigsResponse | PlainMessage<ListConfigsResponse> | undefined, b: ListConfigsResponse | PlainMessage<ListConfigsResponse> | undefined): boolean {
    return proto3.util.equals(ListConfigsResponse, a, b);
  }
}

/**
 * Gets a RuntimeConfig resource.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.GetConfigRequest
 */
export class GetConfigRequest extends Message<GetConfigRequest> {
  /**
   * The name of the RuntimeConfig resource to retrieve, in the format:
   *
   * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
   *
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<GetConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.GetConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConfigRequest {
    return new GetConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConfigRequest {
    return new GetConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConfigRequest {
    return new GetConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetConfigRequest | PlainMessage<GetConfigRequest> | undefined, b: GetConfigRequest | PlainMessage<GetConfigRequest> | undefined): boolean {
    return proto3.util.equals(GetConfigRequest, a, b);
  }
}

/**
 * Creates a RuntimeConfig resource.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.CreateConfigRequest
 */
export class CreateConfigRequest extends Message<CreateConfigRequest> {
  /**
   * The [project ID](https://support.google.com/cloud/answer/6158840?hl=en&ref_topic=6158848)
   * for this request, in the format `projects/[PROJECT_ID]`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The RuntimeConfig to create.
   *
   * @generated from field: google.cloud.runtimeconfig.v1beta1.RuntimeConfig config = 2;
   */
  config?: RuntimeConfig;

  /**
   * An optional but recommended unique `request_id`. If the server
   * receives two `create()` requests  with the same
   * `request_id`, then the second request will be ignored and the
   * first resource created and stored in the backend is returned.
   * Empty `request_id` fields are ignored.
   *
   * It is responsibility of the client to ensure uniqueness of the
   * `request_id` strings.
   *
   * `request_id` strings are limited to 64 characters.
   *
   * @generated from field: string request_id = 3;
   */
  requestId = "";

  constructor(data?: PartialMessage<CreateConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.CreateConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "config", kind: "message", T: RuntimeConfig },
    { no: 3, name: "request_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConfigRequest {
    return new CreateConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConfigRequest {
    return new CreateConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConfigRequest {
    return new CreateConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateConfigRequest | PlainMessage<CreateConfigRequest> | undefined, b: CreateConfigRequest | PlainMessage<CreateConfigRequest> | undefined): boolean {
    return proto3.util.equals(CreateConfigRequest, a, b);
  }
}

/**
 * Request message for `UpdateConfig()` method.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest
 */
export class UpdateConfigRequest extends Message<UpdateConfigRequest> {
  /**
   * The name of the RuntimeConfig resource to update, in the format:
   *
   * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The config resource to update.
   *
   * @generated from field: google.cloud.runtimeconfig.v1beta1.RuntimeConfig config = 2;
   */
  config?: RuntimeConfig;

  constructor(data?: PartialMessage<UpdateConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "config", kind: "message", T: RuntimeConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConfigRequest {
    return new UpdateConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConfigRequest {
    return new UpdateConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConfigRequest {
    return new UpdateConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateConfigRequest | PlainMessage<UpdateConfigRequest> | undefined, b: UpdateConfigRequest | PlainMessage<UpdateConfigRequest> | undefined): boolean {
    return proto3.util.equals(UpdateConfigRequest, a, b);
  }
}

/**
 * Request for the `DeleteConfig()` method.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.DeleteConfigRequest
 */
export class DeleteConfigRequest extends Message<DeleteConfigRequest> {
  /**
   * The RuntimeConfig resource to delete, in the format:
   *
   * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.DeleteConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteConfigRequest {
    return new DeleteConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteConfigRequest {
    return new DeleteConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteConfigRequest {
    return new DeleteConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteConfigRequest | PlainMessage<DeleteConfigRequest> | undefined, b: DeleteConfigRequest | PlainMessage<DeleteConfigRequest> | undefined): boolean {
    return proto3.util.equals(DeleteConfigRequest, a, b);
  }
}

/**
 * Request for the `ListVariables()` method.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.ListVariablesRequest
 */
export class ListVariablesRequest extends Message<ListVariablesRequest> {
  /**
   * The path to the RuntimeConfig resource for which you want to list variables.
   * The configuration must exist beforehand; the path must by in the format:
   *
   * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * Filters variables by matching the specified filter. For example:
   *
   * `projects/example-project/config/[CONFIG_NAME]/variables/example-variable`.
   *
   * @generated from field: string filter = 2;
   */
  filter = "";

  /**
   * Specifies the number of results to return per page. If there are fewer
   * elements than the specified number, returns all elements.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize = 0;

  /**
   * Specifies a page token to use. Set `pageToken` to a `nextPageToken`
   * returned by a previous list request to get the next page of results.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken = "";

  /**
   * The flag indicates whether the user wants to return values of variables.
   * If true, then only those variables that user has IAM GetVariable permission
   * will be returned along with their values.
   *
   * @generated from field: bool return_values = 5;
   */
  returnValues = false;

  constructor(data?: PartialMessage<ListVariablesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.ListVariablesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "return_values", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListVariablesRequest {
    return new ListVariablesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListVariablesRequest {
    return new ListVariablesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListVariablesRequest {
    return new ListVariablesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListVariablesRequest | PlainMessage<ListVariablesRequest> | undefined, b: ListVariablesRequest | PlainMessage<ListVariablesRequest> | undefined): boolean {
    return proto3.util.equals(ListVariablesRequest, a, b);
  }
}

/**
 * Response for the `ListVariables()` method.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.ListVariablesResponse
 */
export class ListVariablesResponse extends Message<ListVariablesResponse> {
  /**
   * A list of variables and their values. The order of returned variable
   * objects is arbitrary.
   *
   * @generated from field: repeated google.cloud.runtimeconfig.v1beta1.Variable variables = 1;
   */
  variables: Variable[] = [];

  /**
   * This token allows you to get the next page of results for list requests.
   * If the number of results is larger than `pageSize`, use the `nextPageToken`
   * as a value for the query parameter `pageToken` in the next list request.
   * Subsequent list requests will have their own `nextPageToken` to continue
   * paging through the results
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListVariablesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.ListVariablesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "variables", kind: "message", T: Variable, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListVariablesResponse {
    return new ListVariablesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListVariablesResponse {
    return new ListVariablesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListVariablesResponse {
    return new ListVariablesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListVariablesResponse | PlainMessage<ListVariablesResponse> | undefined, b: ListVariablesResponse | PlainMessage<ListVariablesResponse> | undefined): boolean {
    return proto3.util.equals(ListVariablesResponse, a, b);
  }
}

/**
 * Request for the `WatchVariable()` method.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.WatchVariableRequest
 */
export class WatchVariableRequest extends Message<WatchVariableRequest> {
  /**
   * The name of the variable to watch, in the format:
   *
   * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * If specified, checks the current timestamp of the variable and if the
   * current timestamp is newer than `newerThan` timestamp, the method returns
   * immediately.
   *
   * If not specified or the variable has an older timestamp, the watcher waits
   * for a the value to change before returning.
   *
   * @generated from field: google.protobuf.Timestamp newer_than = 4;
   */
  newerThan?: Timestamp;

  constructor(data?: PartialMessage<WatchVariableRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.WatchVariableRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "newer_than", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WatchVariableRequest {
    return new WatchVariableRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WatchVariableRequest {
    return new WatchVariableRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WatchVariableRequest {
    return new WatchVariableRequest().fromJsonString(jsonString, options);
  }

  static equals(a: WatchVariableRequest | PlainMessage<WatchVariableRequest> | undefined, b: WatchVariableRequest | PlainMessage<WatchVariableRequest> | undefined): boolean {
    return proto3.util.equals(WatchVariableRequest, a, b);
  }
}

/**
 * Request for the `GetVariable()` method.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.GetVariableRequest
 */
export class GetVariableRequest extends Message<GetVariableRequest> {
  /**
   * The name of the variable to return, in the format:
   *
   * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIBLE_NAME]`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetVariableRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.GetVariableRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVariableRequest {
    return new GetVariableRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVariableRequest {
    return new GetVariableRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVariableRequest {
    return new GetVariableRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetVariableRequest | PlainMessage<GetVariableRequest> | undefined, b: GetVariableRequest | PlainMessage<GetVariableRequest> | undefined): boolean {
    return proto3.util.equals(GetVariableRequest, a, b);
  }
}

/**
 * Request for the `CreateVariable()` method.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.CreateVariableRequest
 */
export class CreateVariableRequest extends Message<CreateVariableRequest> {
  /**
   * The path to the RutimeConfig resource that this variable should belong to.
   * The configuration must exist beforehand; the path must by in the format:
   *
   * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The variable to create.
   *
   * @generated from field: google.cloud.runtimeconfig.v1beta1.Variable variable = 2;
   */
  variable?: Variable;

  /**
   * An optional but recommended unique `request_id`. If the server
   * receives two `create()` requests  with the same
   * `request_id`, then the second request will be ignored and the
   * first resource created and stored in the backend is returned.
   * Empty `request_id` fields are ignored.
   *
   * It is responsibility of the client to ensure uniqueness of the
   * `request_id` strings.
   *
   * `request_id` strings are limited to 64 characters.
   *
   * @generated from field: string request_id = 3;
   */
  requestId = "";

  constructor(data?: PartialMessage<CreateVariableRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.CreateVariableRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "variable", kind: "message", T: Variable },
    { no: 3, name: "request_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateVariableRequest {
    return new CreateVariableRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateVariableRequest {
    return new CreateVariableRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateVariableRequest {
    return new CreateVariableRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateVariableRequest | PlainMessage<CreateVariableRequest> | undefined, b: CreateVariableRequest | PlainMessage<CreateVariableRequest> | undefined): boolean {
    return proto3.util.equals(CreateVariableRequest, a, b);
  }
}

/**
 * Request for the `UpdateVariable()` method.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest
 */
export class UpdateVariableRequest extends Message<UpdateVariableRequest> {
  /**
   * The name of the variable to update, in the format:
   *
   * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The variable to update.
   *
   * @generated from field: google.cloud.runtimeconfig.v1beta1.Variable variable = 2;
   */
  variable?: Variable;

  constructor(data?: PartialMessage<UpdateVariableRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "variable", kind: "message", T: Variable },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateVariableRequest {
    return new UpdateVariableRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateVariableRequest {
    return new UpdateVariableRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateVariableRequest {
    return new UpdateVariableRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateVariableRequest | PlainMessage<UpdateVariableRequest> | undefined, b: UpdateVariableRequest | PlainMessage<UpdateVariableRequest> | undefined): boolean {
    return proto3.util.equals(UpdateVariableRequest, a, b);
  }
}

/**
 * Request for the `DeleteVariable()` method.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest
 */
export class DeleteVariableRequest extends Message<DeleteVariableRequest> {
  /**
   * The name of the variable to delete, in the format:
   *
   * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Set to `true` to recursively delete multiple variables with the same
   * prefix.
   *
   * @generated from field: bool recursive = 2;
   */
  recursive = false;

  constructor(data?: PartialMessage<DeleteVariableRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "recursive", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteVariableRequest {
    return new DeleteVariableRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteVariableRequest {
    return new DeleteVariableRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteVariableRequest {
    return new DeleteVariableRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteVariableRequest | PlainMessage<DeleteVariableRequest> | undefined, b: DeleteVariableRequest | PlainMessage<DeleteVariableRequest> | undefined): boolean {
    return proto3.util.equals(DeleteVariableRequest, a, b);
  }
}

/**
 * Request for the `ListWaiters()` method.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.ListWaitersRequest
 */
export class ListWaitersRequest extends Message<ListWaitersRequest> {
  /**
   * The path to the configuration for which you want to get a list of waiters.
   * The configuration must exist beforehand; the path must by in the format:
   *
   * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * Specifies the number of results to return per page. If there are fewer
   * elements than the specified number, returns all elements.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize = 0;

  /**
   * Specifies a page token to use. Set `pageToken` to a `nextPageToken`
   * returned by a previous list request to get the next page of results.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  constructor(data?: PartialMessage<ListWaitersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.ListWaitersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListWaitersRequest {
    return new ListWaitersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListWaitersRequest {
    return new ListWaitersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListWaitersRequest {
    return new ListWaitersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListWaitersRequest | PlainMessage<ListWaitersRequest> | undefined, b: ListWaitersRequest | PlainMessage<ListWaitersRequest> | undefined): boolean {
    return proto3.util.equals(ListWaitersRequest, a, b);
  }
}

/**
 * Response for the `ListWaiters()` method.
 * Order of returned waiter objects is arbitrary.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.ListWaitersResponse
 */
export class ListWaitersResponse extends Message<ListWaitersResponse> {
  /**
   * Found waiters in the project.
   *
   * @generated from field: repeated google.cloud.runtimeconfig.v1beta1.Waiter waiters = 1;
   */
  waiters: Waiter[] = [];

  /**
   * This token allows you to get the next page of results for list requests.
   * If the number of results is larger than `pageSize`, use the `nextPageToken`
   * as a value for the query parameter `pageToken` in the next list request.
   * Subsequent list requests will have their own `nextPageToken` to continue
   * paging through the results
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken = "";

  constructor(data?: PartialMessage<ListWaitersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.ListWaitersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "waiters", kind: "message", T: Waiter, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListWaitersResponse {
    return new ListWaitersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListWaitersResponse {
    return new ListWaitersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListWaitersResponse {
    return new ListWaitersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListWaitersResponse | PlainMessage<ListWaitersResponse> | undefined, b: ListWaitersResponse | PlainMessage<ListWaitersResponse> | undefined): boolean {
    return proto3.util.equals(ListWaitersResponse, a, b);
  }
}

/**
 * Request for the `GetWaiter()` method.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.GetWaiterRequest
 */
export class GetWaiterRequest extends Message<GetWaiterRequest> {
  /**
   * The fully-qualified name of the Waiter resource object to retrieve, in the
   * format:
   *
   * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetWaiterRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.GetWaiterRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetWaiterRequest {
    return new GetWaiterRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetWaiterRequest {
    return new GetWaiterRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetWaiterRequest {
    return new GetWaiterRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetWaiterRequest | PlainMessage<GetWaiterRequest> | undefined, b: GetWaiterRequest | PlainMessage<GetWaiterRequest> | undefined): boolean {
    return proto3.util.equals(GetWaiterRequest, a, b);
  }
}

/**
 * Request message for `CreateWaiter()` method.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest
 */
export class CreateWaiterRequest extends Message<CreateWaiterRequest> {
  /**
   * The path to the configuration that will own the waiter.
   * The configuration must exist beforehand; the path must by in the format:
   *
   * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`.
   *
   * @generated from field: string parent = 1;
   */
  parent = "";

  /**
   * The Waiter resource to create.
   *
   * @generated from field: google.cloud.runtimeconfig.v1beta1.Waiter waiter = 2;
   */
  waiter?: Waiter;

  /**
   * An optional but recommended unique `request_id`. If the server
   * receives two `create()` requests  with the same
   * `request_id`, then the second request will be ignored and the
   * first resource created and stored in the backend is returned.
   * Empty `request_id` fields are ignored.
   *
   * It is responsibility of the client to ensure uniqueness of the
   * `request_id` strings.
   *
   * `request_id` strings are limited to 64 characters.
   *
   * @generated from field: string request_id = 3;
   */
  requestId = "";

  constructor(data?: PartialMessage<CreateWaiterRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "parent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "waiter", kind: "message", T: Waiter },
    { no: 3, name: "request_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateWaiterRequest {
    return new CreateWaiterRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateWaiterRequest {
    return new CreateWaiterRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateWaiterRequest {
    return new CreateWaiterRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateWaiterRequest | PlainMessage<CreateWaiterRequest> | undefined, b: CreateWaiterRequest | PlainMessage<CreateWaiterRequest> | undefined): boolean {
    return proto3.util.equals(CreateWaiterRequest, a, b);
  }
}

/**
 * Request for the `DeleteWaiter()` method.
 *
 * @generated from message google.cloud.runtimeconfig.v1beta1.DeleteWaiterRequest
 */
export class DeleteWaiterRequest extends Message<DeleteWaiterRequest> {
  /**
   * The Waiter resource to delete, in the format:
   *
   *  `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteWaiterRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.cloud.runtimeconfig.v1beta1.DeleteWaiterRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteWaiterRequest {
    return new DeleteWaiterRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteWaiterRequest {
    return new DeleteWaiterRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteWaiterRequest {
    return new DeleteWaiterRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteWaiterRequest | PlainMessage<DeleteWaiterRequest> | undefined, b: DeleteWaiterRequest | PlainMessage<DeleteWaiterRequest> | undefined): boolean {
    return proto3.util.equals(DeleteWaiterRequest, a, b);
  }
}

